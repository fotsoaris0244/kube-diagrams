apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-13T00:40:56Z"
    generateName: nginx-internal-0-5c6989669f-
    labels:
      app: nginx-internal-0
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      pod-template-hash: 5c6989669f
    name: nginx-internal-0-5c6989669f-dw6vm
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-internal-0-5c6989669f
      uid: 4ee6df61-b374-4e69-909c-c99497da89fb
    resourceVersion: "70016564"
    uid: f3eba88e-0c5e-49f1-a047-67d2f04b11bf
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - /nginx-ingress-controller
      - --ingress-class=nginx
      - --controller-class=approuting.kubernetes.azure.com/nginx-internal
      - --election-id=nginx-internal-0
      - --publish-service=$(POD_NAMESPACE)/nginx-internal-0
      - --configmap=$(POD_NAMESPACE)/nginx-internal-0
      - --enable-annotation-validation=true
      - --http-port=8080
      - --https-port=8443
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: prometheus
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 500m
          memory: 127Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gd7z4
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-internal-0
    serviceAccountName: nginx-internal-0
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app: nginx-internal-0
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: kube-api-access-gd7z4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:58Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:41:07Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:41:07Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://38843225be5a2880275d1a7fe4ea3f5754d8645b0e4d7b9c1dd577f701327e5e
      image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
      imageID: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller@sha256:54e6ad522be55224fde2acc666adb696c49e3354d6369d946ced8ea089c406aa
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:57Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.31
    podIPs:
    - ip: 10.244.1.31
    qosClass: Burstable
    startTime: "2025-06-13T00:40:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-06-13T00:40:36Z"
    generateName: nginx-internal-0-5c6989669f-
    labels:
      app: nginx-internal-0
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      pod-template-hash: 5c6989669f
    name: nginx-internal-0-5c6989669f-q5wlw
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: nginx-internal-0-5c6989669f
      uid: 4ee6df61-b374-4e69-909c-c99497da89fb
    resourceVersion: "70016140"
    uid: 3c666f28-19ad-4657-8221-556ebb78163a
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - args:
      - /nginx-ingress-controller
      - --ingress-class=nginx
      - --controller-class=approuting.kubernetes.azure.com/nginx-internal
      - --election-id=nginx-internal-0
      - --publish-service=$(POD_NAMESPACE)/nginx-internal-0
      - --configmap=$(POD_NAMESPACE)/nginx-internal-0
      - --enable-annotation-validation=true
      - --http-port=8080
      - --https-port=8443
      env:
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 6
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      name: controller
      ports:
      - containerPort: 8080
        name: http
        protocol: TCP
      - containerPort: 8443
        name: https
        protocol: TCP
      - containerPort: 10254
        name: prometheus
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 10254
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        requests:
          cpu: 500m
          memory: 127Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        runAsNonRoot: true
        runAsUser: 101
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mcp57
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000000000
    priorityClassName: system-cluster-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: nginx-internal-0
    serviceAccountName: nginx-internal-0
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    topologySpreadConstraints:
    - labelSelector:
        matchLabels:
          app: nginx-internal-0
      maxSkew: 1
      topologyKey: kubernetes.io/hostname
      whenUnsatisfiable: ScheduleAnyway
    volumes:
    - name: kube-api-access-mcp57
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://64e04b1155d608a8268bfe4435a4c0145d1b623e6b6213f24b4d7e4d0dbaf402
      image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
      imageID: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller@sha256:54e6ad522be55224fde2acc666adb696c49e3354d6369d946ced8ea089c406aa
      lastState: {}
      name: controller
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:41Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.10
    podIPs:
    - ip: 10.244.1.10
    qosClass: Burstable
    startTime: "2025-06-13T00:40:36Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      service.beta.kubernetes.io/azure-load-balancer-internal: "true"
      service.beta.kubernetes.io/azure-load-balancer-internal-subnet: d-210-snet-sviya-lb-p-to-01
      service.beta.kubernetes.io/azure-load-balancer-ipv4: 10.73.111.62
      service.beta.kubernetes.io/azure-load-balancer-resource-group: d-210-rg-sviya-cl-p-to-01
    creationTimestamp: "2025-03-15T01:41:29Z"
    finalizers:
    - service.kubernetes.io/load-balancer-cleanup
    labels:
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      app.kubernetes.io/name: nginx
    name: nginx-internal-0
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: approuting.kubernetes.azure.com/v1alpha1
      controller: true
      kind: NginxIngressController
      name: nginx-internal
      uid: 8569b0b6-4d22-4e0d-8899-5ecfd7f3b43f
    resourceVersion: "1580071"
    uid: cf022a86-3906-4019-8cc3-8b4f2d0626e5
  spec:
    allocateLoadBalancerNodePorts: true
    clusterIP: 10.0.1.175
    clusterIPs:
    - 10.0.1.175
    externalTrafficPolicy: Local
    healthCheckNodePort: 30683
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http
      nodePort: 31403
      port: 80
      protocol: TCP
      targetPort: http
    - name: https
      nodePort: 31695
      port: 443
      protocol: TCP
      targetPort: https
    selector:
      app: nginx-internal-0
    sessionAffinity: None
    type: LoadBalancer
  status:
    loadBalancer:
      ingress:
      - ip: 10.73.111.62
        ipMode: VIP
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      prometheus.io/port: "10254"
      prometheus.io/scrape: "true"
    creationTimestamp: "2025-03-15T01:41:29Z"
    labels:
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      app.kubernetes.io/name: nginx
    name: nginx-internal-0-metrics
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: approuting.kubernetes.azure.com/v1alpha1
      controller: true
      kind: NginxIngressController
      name: nginx-internal
      uid: 8569b0b6-4d22-4e0d-8899-5ecfd7f3b43f
    resourceVersion: "1579516"
    uid: 0fbd904a-23f0-4174-a2ee-b6d2960e6a68
  spec:
    clusterIP: 10.0.145.180
    clusterIPs:
    - 10.0.145.180
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: prometheus
      port: 10254
      protocol: TCP
      targetPort: prometheus
    selector:
      app: nginx-internal-0
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-15T01:41:29Z"
    generation: 2
    labels:
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      app.kubernetes.io/name: nginx
    name: nginx-internal-0
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: approuting.kubernetes.azure.com/v1alpha1
      controller: true
      kind: NginxIngressController
      name: nginx-internal
      uid: 8569b0b6-4d22-4e0d-8899-5ecfd7f3b43f
    resourceVersion: "70016571"
    uid: 1c70b85d-15be-45f2-b183-7938d9601c35
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: nginx-internal-0
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: nginx-internal-0
          app.kubernetes.io/component: ingress-controller
          app.kubernetes.io/managed-by: aks-app-routing-operator
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - /nginx-ingress-controller
          - --ingress-class=nginx
          - --controller-class=approuting.kubernetes.azure.com/nginx-internal
          - --election-id=nginx-internal-0
          - --publish-service=$(POD_NAMESPACE)/nginx-internal-0
          - --configmap=$(POD_NAMESPACE)/nginx-internal-0
          - --enable-annotation-validation=true
          - --http-port=8080
          - --https-port=8443
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 10254
            name: prometheus
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 500m
              memory: 127Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: nginx-internal-0
        serviceAccountName: nginx-internal-0
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: nginx-internal-0
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-03-15T01:41:30Z"
      lastUpdateTime: "2025-03-15T01:41:40Z"
      message: ReplicaSet "nginx-internal-0-5c6989669f" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-13T00:41:07Z"
      lastUpdateTime: "2025-06-13T00:41:07Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-15T01:41:30Z"
    generation: 2
    labels:
      app: nginx-internal-0
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      pod-template-hash: 5c6989669f
    name: nginx-internal-0-5c6989669f
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: nginx-internal-0
      uid: 1c70b85d-15be-45f2-b183-7938d9601c35
    resourceVersion: "70016567"
    uid: 4ee6df61-b374-4e69-909c-c99497da89fb
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: nginx-internal-0
        pod-template-hash: 5c6989669f
    template:
      metadata:
        annotations:
          prometheus.io/port: "10254"
          prometheus.io/scrape: "true"
        creationTimestamp: null
        labels:
          app: nginx-internal-0
          app.kubernetes.io/component: ingress-controller
          app.kubernetes.io/managed-by: aks-app-routing-operator
          pod-template-hash: 5c6989669f
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - /nginx-ingress-controller
          - --ingress-class=nginx
          - --controller-class=approuting.kubernetes.azure.com/nginx-internal
          - --election-id=nginx-internal-0
          - --publish-service=$(POD_NAMESPACE)/nginx-internal-0
          - --configmap=$(POD_NAMESPACE)/nginx-internal-0
          - --enable-annotation-validation=true
          - --http-port=8080
          - --https-port=8443
          env:
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/kubernetes/ingress/nginx-ingress-controller:v1.11.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 6
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          name: controller
          ports:
          - containerPort: 8080
            name: http
            protocol: TCP
          - containerPort: 8443
            name: https
            protocol: TCP
          - containerPort: 10254
            name: prometheus
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 10254
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 500m
              memory: 127Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            runAsNonRoot: true
            runAsUser: 101
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-cluster-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: nginx-internal-0
        serviceAccountName: nginx-internal-0
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        topologySpreadConstraints:
        - labelSelector:
            matchLabels:
              app: nginx-internal-0
          maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: autoscaling/v2
  kind: HorizontalPodAutoscaler
  metadata:
    creationTimestamp: "2025-03-15T01:41:30Z"
    labels:
      app.kubernetes.io/component: ingress-controller
      app.kubernetes.io/managed-by: aks-app-routing-operator
      app.kubernetes.io/name: nginx
    name: nginx-internal-0
    namespace: app-routing-system
    ownerReferences:
    - apiVersion: approuting.kubernetes.azure.com/v1alpha1
      controller: true
      kind: NginxIngressController
      name: nginx-internal
      uid: 8569b0b6-4d22-4e0d-8899-5ecfd7f3b43f
    resourceVersion: "87366615"
    uid: 0f46ec64-7c37-4976-9b71-40346513eabc
  spec:
    maxReplicas: 100
    metrics:
    - resource:
        name: cpu
        target:
          averageUtilization: 70
          type: Utilization
      type: Resource
    minReplicas: 2
    scaleTargetRef:
      apiVersion: apps/v1
      kind: Deployment
      name: nginx-internal-0
  status:
    conditions:
    - lastTransitionTime: "2025-03-15T01:41:45Z"
      message: recommended size matches current size
      reason: ReadyForNewScale
      status: "True"
      type: AbleToScale
    - lastTransitionTime: "2025-06-25T07:43:04Z"
      message: the HPA was able to successfully calculate a replica count from cpu
        resource utilization (percentage of request)
      reason: ValidMetricFound
      status: "True"
      type: ScalingActive
    - lastTransitionTime: "2025-06-27T23:10:52Z"
      message: the desired replica count is less than the minimum replica count
      reason: TooFewReplicas
      status: "True"
      type: ScalingLimited
    currentMetrics:
    - resource:
        current:
          averageUtilization: 0
          averageValue: 2m
        name: cpu
      type: Resource
    currentReplicas: 2
    desiredReplicas: 2
    lastScaleTime: "2025-03-15T01:41:45Z"
kind: List
metadata:
  resourceVersion: ""
