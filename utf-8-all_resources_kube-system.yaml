apiVersion: v1
items:
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:39Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-46w9b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540343"
    uid: 2c9ff1f4-3907-4d01-9bb8-4b5fe6b6d8c7
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pjc8
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pjc8
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2pjc8
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-2pjc8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5bb77194ab1f654bf44d127563751a10b3b6ed1b4dc4d115ee995739cd26ca11
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:39Z"
    - containerID: containerd://1d2af6a2f9dc6f0aeb5eff02684103ffc5d31f6b394e6831b37720327d349ce7
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:39Z"
    - containerID: containerd://012c533518043e1d5a9463d30726c32cd16a3ffc8c0c0fd3a805a44f27d8b7da
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:39Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.15
    podIPs:
    - ip: 10.244.2.15
    qosClass: Burstable
    startTime: "2025-06-25T23:16:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:33Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-4clrs
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540186"
    uid: fd71afac-116a-4dcb-a27b-9149eb9849db
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzdbr
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzdbr
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dzdbr
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-dzdbr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a1ebb7eb81f2d53ed47c1954f116d156e0ec8e88b33ff8ea74bf3fb8bb6e8886
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:34Z"
    - containerID: containerd://443ecb6af266bea3403b993b9dc2bd5d827c4e0c49e6606fe79e54e76a1d02b1
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:34Z"
    - containerID: containerd://f2cf0e83ce8f4f5d3d6f1168a5a8e19590ecb4e81e622c13715f84c4307baa8a
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:34Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.244.10.14
    podIPs:
    - ip: 10.244.10.14
    qosClass: Burstable
    startTime: "2025-06-25T23:16:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:36Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-4zqs9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "86042877"
    uid: 1c2f0033-48db-47da-9918-ddb6f05d4d73
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vbxgv
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vbxgv
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-vbxgv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-vbxgv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d3d28e25e5f7ba0af901f952a32fd02573f3d685cef74489808cc6dd1af2d8b6
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState:
        terminated:
          containerID: containerd://d3caf0f30f0d927d259c9523bdfc3e80090c676be2f3d2bbbf171223325af890
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:37Z"
      name: liveness-probe
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    - containerID: containerd://7203a7f8c47f230d627deb2f2bf6d14f9b5990d308cbb1a0cb9b8606b3801c31
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState:
        terminated:
          containerID: containerd://d9d2a83b0649fbf68ec14eecdc0e19d5050795c5e63f56c131bdd7577bb42d3c
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:36Z"
      name: node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:43Z"
    - containerID: containerd://c474542d7c202c1da422937907b47889ff8b03f7c8ef0993482bd9ecad1d7f7a
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState:
        terminated:
          containerID: containerd://098ddd3d80e116c1d5e26a7fee9f967bf0dec9a010c9fd4db96ee2104595c354
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:36Z"
      name: secrets-store
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.244.15.220
    podIPs:
    - ip: 10.244.15.220
    qosClass: Burstable
    startTime: "2025-06-25T23:16:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:26Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-8fwwd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81539983"
    uid: f8c57e00-5076-48eb-9d2a-6c8c3f5e6586
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hn7m4
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hn7m4
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hn7m4
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-hn7m4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:26Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://7a3c51104a6c943988357645ec0bc6e0f2a33237b242cbe2ed21f180934aad15
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    - containerID: containerd://799e4291fa65dfe8a0f85724657ab3bcd3c1cceca774487a0b8b80487b78a219
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    - containerID: containerd://782679f4f27332d4dc830fad1d03e4f77afa365199c48369f38a8b678fdec8da
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.36
    podIPs:
    - ip: 10.244.1.36
    qosClass: Burstable
    startTime: "2025-06-25T23:16:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:42Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-bhkgn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540443"
    uid: edbdde20-7fdc-417d-8175-4eedc1394b37
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nlzdb
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nlzdb
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nlzdb
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-nlzdb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8b8e13e69a32d31d3b03033ba6aa8de2649e5b2c71983c2c0df395b96e2de2f9
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:43Z"
    - containerID: containerd://3701dd3e40c0ac30194b49b234dbceca2e49714d335e694264b6c285aeb45a3d
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:43Z"
    - containerID: containerd://5ed9f55c711c004a340f0bbf7aed7b06b7fb8f8994dc236dd41515d8e29202fa
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:43Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.244.18.238
    podIPs:
    - ip: 10.244.18.238
    qosClass: Burstable
    startTime: "2025-06-25T23:16:42Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:28Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-d7kck
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540025"
    uid: 2046f7d9-1f2e-4cc6-8975-9ad1da50fc16
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4rfv
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4rfv
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-z4rfv
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-z4rfv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:28Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1402b3f9c8a4146b76a8b47fbd1d62818e0df3afd84ac1e7c15de5eed4268e8d
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:29Z"
    - containerID: containerd://626cc7c7615584977ccdbf1bc359174f26ea0ad047b7585fcd179a5d7914a3d7
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:28Z"
    - containerID: containerd://c9de9aa5823c4cd810b426aad23749833739b5ceafe3829422ee7c65724ddadd
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:29Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.244.7.34
    podIPs:
    - ip: 10.244.7.34
    qosClass: Burstable
    startTime: "2025-06-25T23:16:28Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:40Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-mghcn
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540403"
    uid: 03b88793-7d4e-4a8b-a91e-dc8b3370143f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bfpgw
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bfpgw
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-bfpgw
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-bfpgw
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8f92f2327efc856f21d7cc10d3bc33b609d97ad01e327aa156191e2ccb201bb3
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:41Z"
    - containerID: containerd://e9e0675143254c72e3f93753d2b83d019e67c1b9927317f965076f01c7040e81
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:41Z"
    - containerID: containerd://426a81f8b1c1cf175c96cc580e8016dc3d0dbba62013eeaa52b09a6f03e5effe
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:41Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.244.13.13
    podIPs:
    - ip: 10.244.13.13
    qosClass: Burstable
    startTime: "2025-06-25T23:16:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:31Z"
    generateName: aks-secrets-store-csi-driver-
    labels:
      app: secrets-store-csi-driver
      controller-revision-hash: 57f58cf859
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: aks-secrets-store-csi-driver-s8n2k
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-csi-driver
      uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
    resourceVersion: "81540131"
    uid: 91414966-cbf5-4312-9ccd-3873475fd984
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - args:
      - --v=2
      - --csi-address=/csi/csi.sock
      - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 30
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 15
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv4sx
        readOnly: true
    - args:
      - -v=2
      - --log-format-json=false
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --provider-volume=/var/run/secrets-store-csi-providers
      - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
      - --enable-secret-rotation=true
      - --rotation-poll-interval=2m
      - --metrics-addr=:8095
      - --max-call-recv-msg-size=4194304
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 15
        successThreshold: 1
        timeoutSeconds: 10
      name: secrets-store
      ports:
      - containerPort: 9808
        name: healthz
        protocol: TCP
      - containerPort: 8095
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 200m
          memory: 500Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/lib/kubelet/pods
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /var/run/secrets-store-csi-providers
        name: providers-dir
      - mountPath: /etc/kubernetes/secrets-store-csi-providers
        name: providers-dir-0
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv4sx
        readOnly: true
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=3s
      - --http-endpoint=0.0.0.0:9808
      - -v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: plugin-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cv4sx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-csi-driver
    serviceAccountName: aks-secrets-store-csi-driver
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/pods
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: Directory
      name: registration-dir
    - hostPath:
        path: /var/lib/kubelet/plugins/csi-secrets-store/
        type: DirectoryOrCreate
      name: plugin-dir
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir
    - hostPath:
        path: /etc/kubernetes/secrets-store-csi-providers
        type: DirectoryOrCreate
      name: providers-dir-0
    - name: kube-api-access-cv4sx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a6b3520fa97fa8b2019034ceed90f94499666ca333ed47adb67a492eaebaa205
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe@sha256:20fd8754d36efc52ff0a837e646909102be5d47600a8656804aecd4eff52b7c7
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    - containerID: containerd://81e7b57897f422493979ee5a307a2c7b4c0a25f698dc7ef8590072f8a59bdc9a
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
      imageID: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar@sha256:27a7a7ebd0f4b6d4a4cd56d9c96d27288a7b223b4feacee3b7fcf5be3c2ec63a
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    - containerID: containerd://26e83d002ff99bd7803d4d3729209cd754f7c74bb4a2107eb3aff0129a9526a0
      image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
      imageID: sha256:d4f923248554968fa1e77df8b0bfe89479238d88887e70a90bcf30a11554f365
      lastState: {}
      name: secrets-store
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.244.12.14
    podIPs:
    - ip: 10.244.12.14
    qosClass: Burstable
    startTime: "2025-06-25T23:16:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:32Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-dbjx9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540142"
    uid: 4381ddd8-70b4-4a9b-9c0a-19bea80918cf
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-62lx2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-62lx2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:32Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:33Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:32Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5a07f1968b6834831b8e9cea0ae7ccc9e5037f2e2a0beacec29b2a070aa1ebe1
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-06-25T23:16:32Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:29Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-dfvbg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540071"
    uid: e18dafa6-f4f0-42b9-b919-b4e6be564ef6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wjpwr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-wjpwr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://b6021089cba2ce9d9f9e22a66b3b7d84b6bb96ad9814cb4b4be593f133efaa58
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:30Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-25T23:16:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:25Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-dvw84
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81539962"
    uid: 46385782-888a-4709-94da-f7c020531a7f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qhtcb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-qhtcb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c129208e9fffaa0fe9e86e46e2f2e33b5da88fe323672218e2b362eba643cace
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:26Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-06-25T23:16:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:38Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-ltwvh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540315"
    uid: f59f8af3-e635-400f-b1db-4ef8433d1641
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-q2v4d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-q2v4d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a3ae2a50cf56b26def2f65aa25fe00b5908a367a1a1df2b19b5a8b5084ad64e5
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:39Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-06-25T23:16:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:27Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-mbprc
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540004"
    uid: 714a271e-4f00-4bf1-b815-30c0e2715839
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dksm
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-2dksm
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:28Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:28Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:28Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c609235a3b6b45aaadc660dae2187a501ec8ca5ba222e902cf688dd5ebcf91d
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:28Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-06-25T23:16:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:41Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-n752j
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540418"
    uid: df793db1-13c9-4f0b-a35c-dd3fc6d90404
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-wccg2
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-wccg2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:41Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9fed12f695551d040e8f6166cb2f0eb29b3c5dea43d250d91d57faaf14d39f69
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:41Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-06-25T23:16:41Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:39Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-n8lx8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "81540369"
    uid: 47268abf-c763-48cf-aa5e-aba3b2c1e790
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cgs7n
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-cgs7n
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3d3cf0554480b80833918c07ddebfbc553102eb4678283fd4f69f6042bf4850e
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState: {}
      name: provider-azure-installer
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:40Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-25T23:16:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:35Z"
    generateName: aks-secrets-store-provider-azure-
    labels:
      app: secrets-store-provider-azure
      controller-revision-hash: 795bf79dc6
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
    name: aks-secrets-store-provider-azure-rl5n8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: aks-secrets-store-provider-azure
      uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
    resourceVersion: "86042693"
    uid: 303441c4-c36a-439c-bdf6-22e62ef69018
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - args:
      - --endpoint=unix:///provider/azure.sock
      - --log-format-json=false
      - -v=2
      - --construct-pem-chain=true
      - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
      - --healthz-port=8989
      - --healthz-path=/healthz
      - --healthz-timeout=5s
      - --write-cert-and-key-in-separate-files=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 8989
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 10
      name: provider-azure-installer
      ports:
      - containerPort: 8898
        hostPort: 8898
        name: metrics
        protocol: TCP
      resources:
        limits:
          cpu: 100m
          memory: 100Mi
        requests:
          cpu: 50m
          memory: 100Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /provider
        name: provider-vol
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-lb5td
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    nodeSelector:
      kubernetes.io/os: linux
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: aks-secrets-store-provider-azure
    serviceAccountName: aks-secrets-store-provider-azure
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/run/secrets-store-csi-providers
        type: ""
      name: provider-vol
    - name: kube-api-access-lb5td
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://290308c129c6287ff79433e209c008627d43ba417114dbbd608a9fb0c453f6c7
      image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
      imageID: sha256:acadedeb3bc19104b51a776427f6688e926b7b19f9431ff66945aa6107e2fac8
      lastState:
        terminated:
          containerID: containerd://785b68b7afe0cc8067d4107512b6a581ed2bae0fada756142811b684214d90c3
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:37Z"
      name: provider-azure-installer
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-06-25T23:16:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:07Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-28vhz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "87071051"
    uid: a3ebb38e-4918-45e0-9755-d9ec0aba33be
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bwps
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2bwps
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-2bwps
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T08:59:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T08:59:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ebaeb6e2d078593154602fa8e2bd51444a44a9fa161c32a3db786aba36a3ab83
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://c2d0e7327185b53d5d14f98f1129cb9cc2642eaeb05c843478c2cb650737253f
          exitCode: 137
          finishedAt: "2025-07-02T08:59:08Z"
          reason: OOMKilled
          startedAt: "2025-07-01T10:50:04Z"
      name: ama-logs
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-07-02T08:59:08Z"
    - containerID: containerd://31a52198c9c0fb855b9f2f628b3f9087c2e8de5c81415e8366b07087fb8aaa71
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:08Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.244.7.47
    podIPs:
    - ip: 10.244.7.47
    qosClass: Burstable
    startTime: "2025-06-26T23:06:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:09Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-5jkn6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "86944957"
    uid: 3e965e7e-37c5-4979-8273-973081a445da
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9pzb
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-s9pzb
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-s9pzb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:10Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T05:29:11Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T05:29:11Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e04034457207a4a90174a51e79f1797b1f971086fc6da35cdf3913b9354a711a
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://60b963fba96b9c345ccc87c31ad628be98ab701f4ed18e75f4db247173816f83
          exitCode: 137
          finishedAt: "2025-07-02T05:29:10Z"
          reason: OOMKilled
          startedAt: "2025-07-01T14:30:10Z"
      name: ama-logs
      ready: true
      restartCount: 8
      started: true
      state:
        running:
          startedAt: "2025-07-02T05:29:10Z"
    - containerID: containerd://606dc026bd12c4d99762e816ee306dbdd33984481ef01f433cb31bc6f1a18172
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:10Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.244.10.15
    podIPs:
    - ip: 10.244.10.15
    qosClass: Burstable
    startTime: "2025-06-26T23:06:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:09Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-65kr9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "87376008"
    uid: 0a278e71-f942-4c70-ba40-f393205c17e6
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4w7vd
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4w7vd
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-4w7vd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T17:26:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T17:26:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bdded33e86b79ff28e6318806867feb1176cd6114d31af690ee72ac8715f4f9e
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://a6bfa2275d9dded984ee94118d285323f321fe0d65dedb65cd26cc4c7471a2d9
          exitCode: 137
          finishedAt: "2025-07-02T17:26:10Z"
          reason: OOMKilled
          startedAt: "2025-07-02T15:00:16Z"
      name: ama-logs
      ready: true
      restartCount: 34
      started: true
      state:
        running:
          startedAt: "2025-07-02T17:26:11Z"
    - containerID: containerd://18b767a3c3f4bd03eb7251cbd40cd3550578fb75ce9860ff5556534298c8a902
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:10Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.244.18.254
    podIPs:
    - ip: 10.244.18.254
    qosClass: Burstable
    startTime: "2025-06-26T23:06:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:07Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-q4c94
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "86979257"
    uid: 94435fcf-08c4-4ed1-aa8b-d3fb1908cb4c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5fdz7
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5fdz7
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-5fdz7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T06:26:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T06:26:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://01c9923f6386f09f6aead61386a0f51bb874d12ad78db4f25d783e138e1555b1
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: sha256:57fff2f487fe5b3ab2094fe2c38b7deb855ddd3b015fe183e24fcdd4ce250b47
      lastState:
        terminated:
          containerID: containerd://c879a5043e2d4d41247000676d09e029c172a3b9bfe33f7876b78e7a34ea4a5c
          exitCode: 137
          finishedAt: "2025-07-02T06:26:08Z"
          reason: OOMKilled
          startedAt: "2025-07-01T09:27:08Z"
      name: ama-logs
      ready: true
      restartCount: 6
      started: true
      state:
        running:
          startedAt: "2025-07-02T06:26:08Z"
    - containerID: containerd://06bdf3469f630db10a1d138b0bc85170493fddd720f6466abf69360817b9b264
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: sha256:57fff2f487fe5b3ab2094fe2c38b7deb855ddd3b015fe183e24fcdd4ce250b47
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:08Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.37
    podIPs:
    - ip: 10.244.1.37
    qosClass: Burstable
    startTime: "2025-06-26T23:06:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:07Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-q9v26
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "86538518"
    uid: d6a6c537-3c84-4db0-9481-3a5b9e8a0fd1
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cccwj
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cccwj
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-cccwj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T18:12:09Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T18:12:09Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://388740747853de32cc96e11c545f4b58e9a1ef4f4a21f4566547ec82ad842f91
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://e01d3ba987c1487e6aba4af169321c672119501e4eff2e9bd69f56cad4174274
          exitCode: 137
          finishedAt: "2025-07-01T18:12:08Z"
          reason: OOMKilled
          startedAt: "2025-06-30T13:08:08Z"
      name: ama-logs
      ready: true
      restartCount: 4
      started: true
      state:
        running:
          startedAt: "2025-07-01T18:12:08Z"
    - containerID: containerd://b8c7ea1586755be06f90c6fb68205d00049bc5b9c4ef18a60ca22109e9301fd7
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:08Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.244.13.14
    podIPs:
    - ip: 10.244.13.14
    qosClass: Burstable
    startTime: "2025-06-26T23:06:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:07Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-rm8fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "87326918"
    uid: adf6a55d-0561-48ae-8a99-b56dbeafcff5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b226s
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-b226s
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-b226s
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:56Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T16:04:21Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T16:04:21Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9c5767a96fe679da2f4f268a2531d7f2884769ea9e805d50bdb71f9c7db7fd6e
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://7496dc2dc68ce685b809c92d52198d30f7d22a42940fbec4d6bd879a8f1c8193
          exitCode: 137
          finishedAt: "2025-07-02T16:04:19Z"
          reason: OOMKilled
          startedAt: "2025-07-02T13:58:16Z"
      name: ama-logs
      ready: true
      restartCount: 99
      started: true
      state:
        running:
          startedAt: "2025-07-02T16:04:20Z"
    - containerID: containerd://8b9387248449256194ac30ef40e46b74a8f6f0c44830f2e9c4f6c16639f11ed8
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://ed1bfc37db0ed2fcc2992a03d2a0df5076a8a021df4e042e785c3413255893a7
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-26T23:06:08Z"
      name: ama-logs-prometheus
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:55Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.244.15.27
    podIPs:
    - ip: 10.244.15.27
    qosClass: Burstable
    startTime: "2025-06-26T23:06:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:07Z"
    generateName: ama-logs-rs-765b4599fb-
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 765b4599fb
      rsName: ama-logs-rs
    name: ama-logs-rs-765b4599fb-ns2p6
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: ama-logs-rs-765b4599fb
      uid: 6f4047fd-567a-4423-a078-0a2f0d87c6c9
    resourceVersion: "87319754"
    uid: d05332a7-05b0-490a-be3e-7200be88e1f3
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        - preference:
            matchExpressions:
            - key: storageprofile
              operator: NotIn
              values:
              - managed
          weight: 1
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: ReplicaSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: NUM_OF_FLUENTD_WORKERS
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.cpu
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: SIDECAR_SCRAPING_ENABLED
        value: "true"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 25227
        name: in-rs-tcp
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1536Mi
        requests:
          cpu: 150m
          memory: 250Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/log
        name: host-log
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config
        name: ama-logs-rs-config
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-n46xv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: ama-logs-rs-config
      name: ama-logs-rs-config
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-n46xv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:08Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T15:52:31Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T15:52:31Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:07Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ede7b47f80e098f428aa8a75a4de96c006c592ed549c0aab9aac288b77258663
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: sha256:57fff2f487fe5b3ab2094fe2c38b7deb855ddd3b015fe183e24fcdd4ce250b47
      lastState:
        terminated:
          containerID: containerd://ac5dea57706d899d1e6d8326b1ac82b8f122ee453145d01e66dc714ee46d282d
          exitCode: 137
          finishedAt: "2025-07-02T15:52:30Z"
          reason: OOMKilled
          startedAt: "2025-07-02T12:13:18Z"
      name: ama-logs
      ready: true
      restartCount: 37
      started: true
      state:
        running:
          startedAt: "2025-07-02T15:52:30Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.16
    podIPs:
    - ip: 10.244.2.16
    qosClass: Burstable
    startTime: "2025-06-26T23:06:07Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:09Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-whlw9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "87311123"
    uid: 4e5f1976-7875-4593-8b48-dabc20275e21
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pqnjq
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pqnjq
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-pqnjq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T15:38:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-02T15:38:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f9cfae5dbd73580ba5d5546931e9d632a625f2930589f6ebe3cec24d49e97e9b
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState:
        terminated:
          containerID: containerd://2b22208ac5f6b7a50fa37cd8fcdb8757964983122b074397f5ecdbbc356b555d
          exitCode: 137
          finishedAt: "2025-07-02T15:38:10Z"
          reason: OOMKilled
          startedAt: "2025-07-01T12:37:11Z"
      name: ama-logs
      ready: true
      restartCount: 5
      started: true
      state:
        running:
          startedAt: "2025-07-02T15:38:11Z"
    - containerID: containerd://028effcd391b0dfe62c2186593f7e3d7e5bf0ac9aa833ef5ef66aa24dcd4f539
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: mcr.microsoft.com/azuremonitor/containerinsights/ciprod@sha256:e9fdc573397ec75a82be68cbc56a6ef65698c6bbc1ce3ff268b0a76ed18a6291
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:10Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.244.12.15
    podIPs:
    - ip: 10.244.12.15
    qosClass: Burstable
    startTime: "2025-06-26T23:06:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
      agentVersion: azure-mdsd-1.35.1
      dockerProviderVersion: 18.0.1-0
      kubernetes.azure.com/no-http-proxy-vars: "true"
      schema-versions: v1
    creationTimestamp: "2025-06-26T23:06:09Z"
    generateName: ama-logs-
    labels:
      component: ama-logs-agent
      controller-revision-hash: 7b8f88f8d7
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
      tier: node
    name: ama-logs-z55ds
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: ama-logs
      uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
    resourceVersion: "85945245"
    uid: 82eb8b81-48ac-4414-931b-69538ccf36b3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: FBIT_SERVICE_FLUSH_INTERVAL
        value: "15"
      - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
        value: "1"
      - name: FBIT_TAIL_BUFFER_MAX_SIZE
        value: "1"
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
        value: koreacentral,norwayeast,eastus2
      - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
        value: "false"
      - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
        value: "28331"
      - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
        value: "false"
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_RETINA_FLOW_LOGS_ENABLED
        value: "false"
      - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
        value: "false"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs
      ports:
      - containerPort: 25225
        protocol: TCP
      - containerPort: 25224
        protocol: UDP
      - containerPort: 28330
        hostPort: 28330
        name: syslog
        protocol: TCP
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 325Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /hostfs
        mountPropagation: HostToContainer
        name: host-root
        readOnly: true
      - mountPath: /var/log
        name: host-log
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/lib/docker/containers
        name: containerlog-path
        readOnly: true
      - mountPath: /mnt/docker
        name: containerlog-path-2
        readOnly: true
      - mountPath: /mnt/containers
        name: containerlog-path-3
        readOnly: true
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/settings/adx
        name: ama-logs-adx-secret
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tzh98
        readOnly: true
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_IP
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: status.hostIP
      - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
        valueFrom:
          resourceFieldRef:
            containerName: ama-logs-prometheus
            divisor: "0"
            resource: limits.memory
      - name: HOSTNAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      - name: AKS_CLUSTER_NAME
        value: d-210-akscl-sviya-k8-p-to-01
      - name: AKS_RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: AKS_NODE_RESOURCE_GROUP
        value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
      - name: AKS_REGION
        value: canadacentral
      - name: CONTROLLER_TYPE
        value: DaemonSet
      - name: CONTAINER_TYPE
        value: PrometheusSidecar
      - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
        value: bb4b7405-bb48-4507-a6c7-09a48a018501
      - name: USING_AAD_MSI_AUTH
        value: "false"
      - name: SYSLOG_HOST_PORT
        value: "28330"
      - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
        value: "false"
      - name: CLUSTER_CLOUD_ENVIRONMENT
        value: azurepubliccloud
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /bin/bash
          - -c
          - /opt/livenessprobe.sh
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 15
      name: ama-logs-prometheus
      resources:
        limits:
          cpu: 500m
          memory: 1Gi
        requests:
          cpu: 75m
          memory: 225Mi
      securityContext:
        capabilities:
          add:
          - DAC_OVERRIDE
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/kubernetes/host
        name: azure-json-path
      - mountPath: /etc/ama-logs-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/omsagent-secret
        name: ama-logs-secret
        readOnly: true
      - mountPath: /etc/config/settings
        name: settings-vol-config
        readOnly: true
      - mountPath: /etc/config/osm-settings
        name: osm-settings-vol-config
        readOnly: true
      - mountPath: /var/run/mdsd-PrometheusSidecar
        name: mdsd-prometheus-sock
      - mountPath: /var/run/mdsd-ci
        name: mdsd-sock
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-tzh98
        readOnly: true
    dnsConfig:
      options:
      - name: ndots
        value: "3"
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: ama-logs
    serviceAccountName: ama-logs
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    - effect: PreferNoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /
        type: ""
      name: host-root
    - emptyDir: {}
      name: mdsd-prometheus-sock
    - hostPath:
        path: /etc/hostname
        type: ""
      name: container-hostname
    - hostPath:
        path: /var/log
        type: ""
      name: host-log
    - hostPath:
        path: /var/run/mdsd-ci
        type: ""
      name: mdsd-sock
    - hostPath:
        path: /var/lib/docker/containers
        type: ""
      name: containerlog-path
    - hostPath:
        path: /mnt/docker
        type: ""
      name: containerlog-path-2
    - hostPath:
        path: /mnt/containers
        type: ""
      name: containerlog-path-3
    - hostPath:
        path: /etc/kubernetes
        type: ""
      name: azure-json-path
    - name: ama-logs-secret
      secret:
        defaultMode: 420
        secretName: ama-logs-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-agentconfig
        optional: true
      name: settings-vol-config
    - name: ama-logs-adx-secret
      secret:
        defaultMode: 420
        optional: true
        secretName: ama-logs-adx-secret
    - configMap:
        defaultMode: 420
        name: container-azm-ms-osmconfig
        optional: true
      name: osm-settings-vol-config
    - name: kube-api-access-tzh98
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:11Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T01:56:12Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T01:56:12Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-26T23:06:09Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://f85b91961d5f6e49f1b9fa700c58c12b1b3225c878109663cd749055e682bd7f
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: sha256:57fff2f487fe5b3ab2094fe2c38b7deb855ddd3b015fe183e24fcdd4ce250b47
      lastState:
        terminated:
          containerID: containerd://1a83c0712bc59e039ced7a53843aebd2e7917ba784992c81b11e0ce3c7e68154
          exitCode: 137
          finishedAt: "2025-07-01T01:56:10Z"
          reason: OOMKilled
          startedAt: "2025-06-29T00:41:10Z"
      name: ama-logs
      ready: true
      restartCount: 2
      started: true
      state:
        running:
          startedAt: "2025-07-01T01:56:11Z"
    - containerID: containerd://385e271c69a97b3eb859c37c39de2e60cae488e4032fb9b0b3246a0e5456eadc
      image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
      imageID: sha256:57fff2f487fe5b3ab2094fe2c38b7deb855ddd3b015fe183e24fcdd4ce250b47
      lastState: {}
      name: ama-logs-prometheus
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-26T23:06:10Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.17
    podIPs:
    - ip: 10.244.2.17
    qosClass: Burstable
    startTime: "2025-06-26T23:06:09Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:32:15Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-6nvlx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "70008613"
    uid: 254553ea-e784-4a8d-8534-5c5f7bb5192e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5b276415037a9c44bf18692d12a72a32a4e78b22a18b429b82287740e6ce87e1
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:18Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-13T00:32:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:40:10Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-7c28b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "70014850"
    uid: ceff2bd5-623c-4d51-9696-e01784c0bc4d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cdf7a5c7e3c9c9c83619dbebc944818a3e5c2acb0fe2f1c5b3afcffd230ac916
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:12Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-13T00:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:16:37Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-7slnf
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "52043521"
    uid: 42172c71-055c-4519-80be-d7d649fba2b5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:37Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://07243d0920f35d7fcdabb43a9c8ca75bd3b1696ad024bea7b5b7e432c2705ab2
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:16:39Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-05-23T02:16:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:53:19Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-84fkr
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "52075664"
    uid: c3b400dc-20a9-4be7-a6d1-5080266d9dc0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:19Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://979877e9e11d0d838468bd1473e7f929d5db55b3183e611082915af01e110b1e
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:53:24Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-05-23T02:53:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:26:13Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-csgq5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "86043285"
    uid: db449fd2-de9d-4929-846a-4c4e645e96fd
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:26:13Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:26:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://76a8cddb514de163c9c4d262eaa32de16f1c1e5dbecd0669c4b2a0210c4c783b
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState:
        terminated:
          containerID: containerd://ff0b77c5e87dcf3a47d71531c503e21d95f3b99f3b0806cbb58c18a37a5cf319
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-23T02:26:15Z"
      name: azure-ip-masq-agent
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:43Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-05-23T02:26:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T01:59:25Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-dz7nk
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "52032155"
    uid: 9c8dde64-759a-4421-b181-85ae53bc8d54
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:29Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:26Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0a6691cd49dc3627555b06d9ed64bf8c2c8407d9696796e71e4db758294a472c
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T01:59:28Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-05-23T01:59:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:13:29Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-q9ct4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "52041382"
    uid: 897178a2-f3a5-4c63-bebc-9ded1252eef0
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:32Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:29Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:32Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:32Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://cbeec1827e6f3ca9a9fafd067e5c36ee6e194e75574ac99187727aa632cebb25
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:13:31Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-05-23T02:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:10:16Z"
    generateName: azure-ip-masq-agent-
    labels:
      controller-revision-hash: 76897f695b
      k8s-app: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "2"
      tier: node
    name: azure-ip-masq-agent-rcrqt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: azure-ip-masq-agent
      uid: dade17de-8dfe-488c-9313-479011d31c2b
    resourceVersion: "52039253"
    uid: 0fd720d3-60d9-4a13-92be-1a89e07092be
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    automountServiceAccountToken: false
    containers:
    - args:
      - --v=2
      - --resync-interval=60
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imagePullPolicy: IfNotPresent
      name: azure-ip-masq-agent
      resources:
        limits:
          cpu: 500m
          memory: 250Mi
        requests:
          cpu: 100m
          memory: 50Mi
      securityContext:
        capabilities:
          add:
          - NET_ADMIN
          - NET_RAW
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: azure-ip-masq-agent-config-volume
      - mountPath: /run/xtables.lock
        name: iptableslock
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: default
    serviceAccountName: default
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: azure-ip-masq-agent-config-volume
      projected:
        defaultMode: 420
        sources:
        - configMap:
            items:
            - key: ip-masq-agent
              mode: 444
              path: ip-masq-agent
            name: azure-ip-masq-agent-config
            optional: true
        - configMap:
            items:
            - key: ip-masq-agent-reconciled
              mode: 444
              path: ip-masq-agent-reconciled
            name: azure-ip-masq-agent-config-reconciled
            optional: true
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:16Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://63cf85c83f1602e203436fe7b0a397f149639f0e6d7fca22c19579f447255a76
      image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
      imageID: sha256:1d471a89c4ac4ba26b5d303b9d0c97f82a0d44d48b7b2e7d9512361df1b64a08
      lastState: {}
      name: azure-ip-masq-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:10:18Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-05-23T02:10:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      aks.component/sig: azure-policy
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-06-25T23:16:34Z"
    generateName: azure-policy-5bdd784c47-
    labels:
      app: azure-policy
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5bdd784c47
    name: azure-policy-5bdd784c47-rr28q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-policy-5bdd784c47
      uid: f5ecb8bf-2fc7-4f8f-8e22-91d03b028f2d
    resourceVersion: "81540461"
    uid: 536262c6-152f-402e-8d33-21e7578faa54
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - azure-policy
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: K8S_POLICY_PREFIX
        value: azurepolicy
      - name: RESOURCE_ID
        value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
      - name: RESOURCE_TYPE
        value: Microsoft.ContainerService/managedClusters
      - name: DATAPLANE_ENDPOINT
        value: https://data.policy.core.windows.net
      - name: ACS_CREDENTIAL_LOCATION
        value: /etc/acs/azure.json
      - name: REFRESH_INTERVAL
        value: 15m
      - name: AUDIT_INTERVAL
        value: 15m
      - name: TELEMETRY_HEARTBEAT_INTERVAL
        value: 15m
      - name: MUTATION_ENABLED
        value: "true"
      - name: EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT
        value: "false"
      - name: USER_ASSIGNED_IDENTITY
        value: f1a021b2-9902-4560-820a-f4139f4ffe90
      - name: CURRENT_IMAGE
        value: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
      - name: FULL_SCAN_EXCLUSION_LIST
        value: kube-system,gatekeeper-system
      - name: WEBHOOK_EXCLUSION_LIST
        value: kube-system,gatekeeper-system
      - name: GATEKEEPER_NAMESPACE
        value: gatekeeper-system
      - name: POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: DATA_BOUNDARY
        value: Global
      image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: azure-policy
      ports:
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        initialDelaySeconds: 5
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 200Mi
        requests:
          cpu: 30m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsUser: 0
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/acs/azure.json
        name: acs-credential
        readOnly: true
      - mountPath: /etc/ssl/certs
        name: ca-certs
        readOnly: true
      - mountPath: /etc/pki/ca-trust/extracted
        name: etc-pki-ca-certs
        readOnly: true
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-gxqcp
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-policy
    serviceAccountName: azure-policy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - hostPath:
        path: /etc/kubernetes/azure.json
        type: File
      name: acs-credential
    - hostPath:
        path: /etc/ssl/certs
        type: Directory
      name: ca-certs
    - hostPath:
        path: /etc/pki/ca-trust/extracted
        type: DirectoryOrCreate
      name: etc-pki-ca-certs
    - name: kube-api-access-gxqcp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:36Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ab7608e5f77a01c87ceefc5b8b5c757d84cd07fdcb79d155f4256a9049b79000
      image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
      imageID: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod@sha256:85f18af876290786b42b4f9830cb5337097b0c0689c58b1bdcf6ae463d2db1dc
      lastState: {}
      name: azure-policy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:35Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.13
    podIPs:
    - ip: 10.244.2.13
    qosClass: Burstable
    startTime: "2025-06-25T23:16:34Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      aks.component/sig: azure-policy
      checksum/ca-cert: a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5
      checksum/tls-cert: a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
    creationTimestamp: "2025-06-25T23:16:35Z"
    generateName: azure-policy-webhook-74dc77d8c5-
    labels:
      app: azure-policy-webhook
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 74dc77d8c5
    name: azure-policy-webhook-74dc77d8c5-hgvpw
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: azure-policy-webhook-74dc77d8c5
      uid: 8e6a41c0-eca9-4097-846d-bb5591b03b57
    resourceVersion: "81540282"
    uid: 6ff2a965-6665-4e7c-ba56-042e930f54e8
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - azure-policy-webhook
            topologyKey: kubernetes.io/hostname
          weight: 100
    containers:
    - args:
      - --port=9449
      - --generate-certs=false
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      - name: WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES
        value: aksService,aksDeploymentSafeguards
      image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.2
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /healthz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: azure-policy-webhook
      ports:
      - containerPort: 9090
        name: healthz
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: 9090
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: 100m
          memory: 200Mi
        requests:
          cpu: 30m
          memory: 50Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsGroup: 999
        runAsNonRoot: true
        runAsUser: 1000
        seccompProfile:
          type: RuntimeDefault
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mbwwv
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: azure-policy-webhook-account
    serviceAccountName: azure-policy-webhook-account
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 300
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 300
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-mbwwv
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:37Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:38Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:38Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d64fb8b6599844867d4249fd576f35c466fb2eb3637de4d711433da93189939b
      image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.2
      imageID: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook@sha256:10c6890d6eb108238571ace8ff9377d765020969a012a62aaa177f235bae61bd
      lastState: {}
      name: azure-policy-webhook
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:36Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.14
    podIPs:
    - ip: 10.244.2.14
    qosClass: Burstable
    startTime: "2025-06-25T23:16:35Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-06-13T00:40:10Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-48rmt
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "70014853"
    uid: 2356cf0f-6627-44e9-8f12-6b53c2f1e69b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nkdgl
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-nkdgl
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:13Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://80e602696872dd8851e518c4141c3885feabacf730ac5798a7e260e5ca4619c1
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:13Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-13T00:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:49Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-8t9bq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "58805742"
    uid: 61995d97-e6b7-47ef-9117-47aadb846fa5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pq48g
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-pq48g
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:49Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:49Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://254061181330df4db575ea6b8a04bae8c131f22f791d9643a64213e077b479f8
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:50Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-05-30T23:14:49Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:52Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-b8j68
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "58805830"
    uid: b93f2c9f-7b43-403f-856f-591af117462f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xnnst
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-xnnst
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:53Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:53Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:53Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c0c680ea5417c2ddb090646e0e473fdd57da8ad1c941dfe8324a33a491dae972
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:53Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-05-30T23:14:52Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:51Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-crtpj
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "58805775"
    uid: cbe1bcae-3b70-420a-b441-d9ed68b753a2
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2dchs
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-2dchs
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://299452763e6a805fdb30fdc652d0ca344b1f092dbb67870de1a8c6a03ee0e161
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:51Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-05-30T23:14:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-06-13T00:32:15Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-d6nkz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "70008615"
    uid: 3c3e488a-a121-4355-b6ff-d8dcf4a6db04
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-g5r94
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-g5r94
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:19Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://81b2e60c0f90fde2b2233906d099c618b2e5a64fcb3ae22b987754285d385efd
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:18Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-13T00:32:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:54Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-fwb6r
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "58805877"
    uid: faea0055-8e1e-434d-bb9c-f797bd0a1ef5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-5f6d5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-5f6d5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:54Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:54Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://5822aea42ed6ec6e8610fce93e131465ac116dfe9f6a069fd161be1d29d750ab
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:54Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-05-30T23:14:54Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:44Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-nbw4w
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "86042686"
    uid: 69d2bdc7-951a-40d1-abdd-3c33800638ed
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-4kq4f
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-4kq4f
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e9885fa71d7a722b1109661ddd8cefee2fbed6ca18be2f8795c6cf254c881c1c
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState:
        terminated:
          containerID: containerd://9ea802b3d60376cf57d0e1be38b3241fec1db22fc0e00b1d7e6f96980cbaae98
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-30T23:14:45Z"
      name: cloud-node-manager
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:43Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-05-30T23:14:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
    creationTimestamp: "2025-05-30T23:14:46Z"
    generateName: cloud-node-manager-
    labels:
      controller-revision-hash: 596464fc89
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "3"
    name: cloud-node-manager-x2ntl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: cloud-node-manager
      uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
    resourceVersion: "58805647"
    uid: 14dc80d1-08c1-4b9e-8100-f9b4249a6a0e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - command:
      - cloud-node-manager
      - --node-name=$(NODE_NAME)
      - --wait-routes
      - --enable-deprecated-beta-topology-labels=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imagePullPolicy: IfNotPresent
      name: cloud-node-manager
      resources:
        limits:
          memory: 512Mi
        requests:
          cpu: 50m
          memory: 50Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-f749z
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: cloud-node-manager
    serviceAccountName: cloud-node-manager
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - name: kube-api-access-f749z
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:46Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:46Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3a64014af1daaacf9631e15e952ceb4e9dc3e709cc3210850968f0502e54d58e
      image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
      imageID: sha256:bebdae9199424786f27fd49dec7dc5edbf718790f079019f80ddadc468aa7e7e
      lastState: {}
      name: cloud-node-manager
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:47Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-05-30T23:14:46Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-06-13T00:40:36Z"
    generateName: coredns-autoscaler-5955d6bbdb-
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5955d6bbdb
    name: coredns-autoscaler-5955d6bbdb-htrql
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-autoscaler-5955d6bbdb
      uid: aeeb0244-a3f7-4c19-bf41-e5a02717993d
    resourceVersion: "70015639"
    uid: 47d371c8-fd45-427b-801a-a6b88cb08eaf
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=coredns-autoscaler
      - --target=deployment/coredns
      - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 200m
          memory: 1G
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-mt4jc
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns-autoscaler
    serviceAccountName: coredns-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-mt4jc
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9d1351ddd9d2357efa606f399db6280dd5019786c32d717c86423b204746f157
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imageID: sha256:c9b34e1bd7ae78fe4fb60c1584b1f95e7649e4ccc11fb0b3b32b55d56a3c9986
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:40Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.9
    podIPs:
    - ip: 10.244.1.9
    qosClass: Burstable
    startTime: "2025-06-13T00:40:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-06-25T23:16:24Z"
    generateName: coredns-dbb879dfd-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: dbb879dfd
      version: v20
    name: coredns-dbb879dfd-2c7sm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-dbb879dfd
      uid: 89cd1c41-06f3-4a60-9a34-6c1c572fa3b8
    resourceVersion: "81540175"
    uid: bbf143ba-6a21-4c47-8f3c-2d983a37eb1a
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-nfgnr
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-nfgnr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://387136f4230d370f399bb441130f39fd56e2e5b3dc3f4b8bf642e89bffb3afe1
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imageID: mcr.microsoft.com/oss/v2/kubernetes/coredns@sha256:caa08ed18e6aee1e0ed1713c61c7efaf143178f3bfa4572b0ca029308f3e43e2
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:24Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.11
    podIPs:
    - ip: 10.244.2.11
    qosClass: Burstable
    startTime: "2025-06-25T23:16:24Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-06-25T23:16:21Z"
    generateName: coredns-dbb879dfd-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: dbb879dfd
      version: v20
    name: coredns-dbb879dfd-dxz8f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-dbb879dfd
      uid: 89cd1c41-06f3-4a60-9a34-6c1c572fa3b8
    resourceVersion: "81539798"
    uid: 78857992-5e16-40f6-9924-153bdef30d1c
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-ng4r6
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-ng4r6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:23Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://89d18363f93c3d6086cdecbe37cb851623d5e7a07b7ccb54d6653a55cf26c7d9
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imageID: mcr.microsoft.com/oss/v2/kubernetes/coredns@sha256:caa08ed18e6aee1e0ed1713c61c7efaf143178f3bfa4572b0ca029308f3e43e2
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:23Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.9
    podIPs:
    - ip: 10.244.2.9
    qosClass: Burstable
    startTime: "2025-06-25T23:16:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      prometheus.io/port: "9153"
    creationTimestamp: "2025-06-25T23:16:21Z"
    generateName: coredns-dbb879dfd-
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: dbb879dfd
      version: v20
    name: coredns-dbb879dfd-zj8ss
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: coredns-dbb879dfd
      uid: 89cd1c41-06f3-4a60-9a34-6c1c572fa3b8
    resourceVersion: "81539870"
    uid: e57e33f0-f68e-4f23-86c3-e98fc2a8461b
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - kube-dns
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - args:
      - -conf
      - /etc/coredns/Corefile
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: GOMAXPROCS
        valueFrom:
          resourceFieldRef:
            divisor: "0"
            resource: limits.cpu
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /health
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 5
      name: coredns
      ports:
      - containerPort: 53
        name: dns
        protocol: UDP
      - containerPort: 53
        name: dns-tcp
        protocol: TCP
      - containerPort: 9153
        name: metrics
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8181
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "3"
          memory: 500Mi
        requests:
          cpu: 100m
          memory: 70Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          add:
          - NET_BIND_SERVICE
          drop:
          - ALL
        procMount: Default
        readOnlyRootFilesystem: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/coredns
        name: config-volume
        readOnly: true
      - mountPath: /etc/coredns/custom
        name: custom-config-volume
        readOnly: true
      - mountPath: /tmp
        name: tmp
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v6f7q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: coredns
    serviceAccountName: coredns
    terminationGracePeriodSeconds: 30
    tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - configMap:
        defaultMode: 420
        items:
        - key: Corefile
          path: Corefile
        name: coredns
      name: config-volume
    - configMap:
        defaultMode: 420
        name: coredns-custom
        optional: true
      name: custom-config-volume
    - emptyDir: {}
      name: tmp
    - name: kube-api-access-v6f7q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:21Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:21Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://93b2205792ba2db0c51b3e8e1ff05e04e7bd78403907c636adc3e5e263917310
      image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
      imageID: mcr.microsoft.com/oss/v2/kubernetes/coredns@sha256:caa08ed18e6aee1e0ed1713c61c7efaf143178f3bfa4572b0ca029308f3e43e2
      lastState: {}
      name: coredns
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:23Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.10
    podIPs:
    - ip: 10.244.2.10
    qosClass: Burstable
    startTime: "2025-06-25T23:16:21Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:32:15Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-2j5dg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "70008620"
    uid: 30211344-f6dc-4178-8be4-8f8dcf4f4f4d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcmm4
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcmm4
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-hcmm4
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-hcmm4
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:20Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:20Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:20Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9ee9a327f0fea88473d503049bee8dd50d31ba78c069a9876680be24d1188a6f
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:19Z"
    - containerID: containerd://d372de92014e38c8caac643602d0bc353903da0258268a8675d71c05824245f3
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:18Z"
    - containerID: containerd://a06d7f0d145ad9aa20df254d6999ca449ec224c3b30206f16468a3f6586f98c7
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:18Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-13T00:32:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:48Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-7j92n
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "58805693"
    uid: 963157b1-3454-4d79-99e4-fd71996c1cdf
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7f5
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7f5
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qt7f5
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-qt7f5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:49Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:48Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d18b9a557015b878537682a5755edb387a53a240e209251b22adf147008b6051
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:49Z"
    - containerID: containerd://a098203d50a34714e6e3f29ac13e6f9d55406fc5d72cd3239cd1fbb32f12508a
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:49Z"
    - containerID: containerd://b75b6d5cacdf8fb00934c4b772291b38925637059611ba17f959adb56db316a5
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:49Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-05-30T23:14:48Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:51Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-8qzdg
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "58805771"
    uid: 35978cd5-5d4e-4f80-a05b-3d55778cf0f5
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xlqtx
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xlqtx
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xlqtx
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-xlqtx
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:52Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://599f18a10854548a2ec038a006e97e55f3700ab4263ece45431796236fd78ce6
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:51Z"
    - containerID: containerd://219a6e25042c24162421ad6540bce2d452fe9b0403c31e9546dfab6eeb480ff1
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:51Z"
    - containerID: containerd://b6b37453dcbe4836a828b7b24496d927710107c987565c6a08e616e859bb0b2c
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:51Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-05-30T23:14:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:56Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-brz6q
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "86042678"
    uid: 31129c69-fa3f-4b92-8af3-6f390c78bfee
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cwdf2
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cwdf2
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-cwdf2
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-cwdf2
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:56Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:56Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a570b9e50c9fb9c6d3667dd9de02433c9cff24a3446ce5f63fb677e7f4b529fe
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState:
        terminated:
          containerID: containerd://2bb0b8afbdc66e82b377fe6d4a5821285e0be66dafa66eb4cab0c1efd9bafedb
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-30T23:14:57Z"
      name: azuredisk
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    - containerID: containerd://3829b55c41194617369d4d17ca977727058ce4913864a2d8e45a0b611cf27543
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState:
        terminated:
          containerID: containerd://510c98b722ccefd4b3834eac2ee6cf82f20225602a49b22f5cbe95ef8391a8d5
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-30T23:14:57Z"
      name: liveness-probe
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:43Z"
    - containerID: containerd://9f1e0c6dc820c5e32079a6c209b944fddf87e3c4c58096858eaca49610b249e7
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState:
        terminated:
          containerID: containerd://eef783d02f58f89cc1ac2646a59cd2560e09e375cc291cbea460ed78334a755d
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-30T23:14:57Z"
      name: node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-05-30T23:14:56Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:55Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-ljvzm
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "58805889"
    uid: 05b85756-cd56-4bd8-99c0-b58baf398546
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dz2qj
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dz2qj
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-dz2qj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-dz2qj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:55Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://30c16892e76cd6341c744548658fa32f26a20f234e95cc43e1479535f3c0531b
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:55Z"
    - containerID: containerd://44cefdeb55db618fda6d6a1c0ba6721eb9cef4875d475b81fee803355d9e68c3
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:55Z"
    - containerID: containerd://b6b9b925607c289dadf6119c992f02cbd2f59ad2c3ed18e91ed300995d266668
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:55Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-05-30T23:14:55Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:53Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-mgfk7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "58805856"
    uid: ca631b1d-67b3-4bfd-b344-ee94eb8a1987
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-srnlp
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-srnlp
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-srnlp
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-srnlp
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:53Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:53Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://01ceb831156013da01447e247333396bae53a5501f2092870faeda8d7173692b
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:54Z"
    - containerID: containerd://bd4505d20bad91a1cb7de9046bea19d61182d5416c3a8fb7e6c470cb0020cea9
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:54Z"
    - containerID: containerd://4f13b7e419fac6e1967eea0805856e5794fd497e7c021d0dbdb25e9eae2e91fd
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:54Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-05-30T23:14:53Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-30T23:14:57Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-ts4l2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "58805951"
    uid: 41491333-4e2a-4832-a306-60aa33dc08cc
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2snb9
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2snb9
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-2snb9
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-2snb9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:59Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:58Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:59Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:59Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-30T23:14:58Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8f220f50b5fa358f7be9ca8b95f4de00122bab53bf062c84abb6ffffe2bf2665
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:58Z"
    - containerID: containerd://697fcc0beb7de54ad85e560ef811e188a25b7c0a3d4f28240d51a5ed43050b27
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:58Z"
    - containerID: containerd://8c6be59e901a5cf8e0dd330c3d2065095e151762a2cf5d9ee13f8dd763b51280
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-30T23:14:58Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-05-30T23:14:58Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:40:10Z"
    generateName: csi-azuredisk-node-
    labels:
      app: csi-azuredisk-node
      controller-revision-hash: 646d95c7dc
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "5"
    name: csi-azuredisk-node-z2jkh
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azuredisk-node
      uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
    resourceVersion: "70014870"
    uid: 9ade69aa-1e9a-41fb-8c8e-c873b03fc15c
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29603
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtkrk
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtkrk
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-perf-optimization=true
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azuredisk
      ports:
      - containerPort: 29603
        hostPort: 29603
        name: healthz
        protocol: TCP
      resources:
        limits:
          memory: 5600Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /sys/bus/scsi/devices
        name: sys-devices-dir
      - mountPath: /sys/class/scsi_host/
        name: scsi-host-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-rtkrk
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azuredisk-node-sa
    serviceAccountName: csi-azuredisk-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/disk.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - hostPath:
        path: /sys/bus/scsi/devices
        type: Directory
      name: sys-devices-dir
    - hostPath:
        path: /sys/class/scsi_host/
        type: Directory
      name: scsi-host-dir
    - name: kube-api-access-rtkrk
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:14Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:14Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:14Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://1897be052008bc24a2d553cd212cd83e5bcd456ce7a3aa8dfcc49462a36e59d7
      image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
      imageID: sha256:95614bd9b8b956d989f1e8549ce5596a3b96d29f2232947bdf7044d243072004
      lastState: {}
      name: azuredisk
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:13Z"
    - containerID: containerd://9907ec572eedb476b467d17b88d3befdae606ab0f32bba06ede35bad47d1f451
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:13Z"
    - containerID: containerd://15cdb959a7f2c630a2b1ca1ddd743a53c8016412e395dc2a6407abce83527da9
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:13Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-13T00:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:43Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-485t2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540496"
    uid: 64d7e2d7-6db0-4194-93af-eaf358da389b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frwpd
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frwpd
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-frwpd
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-frwpd
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:47Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:47Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://77a71b9f19cf1d6638406a263325975f05702ceb705573fb2dfd3ac24fffb8e0
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:46Z"
    - containerID: containerd://11be9591b11aa5e665e4317a2a79569cc86d2390eb1b91261e67607e1ee63672
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:44Z"
    - containerID: containerd://b2df50e62e98f16f7b5e48d043ec35e3233a6c2ed87c74752671308ab735ae7d
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:44Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-25T23:16:43Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:31Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-8xd7l
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540215"
    uid: 7bb67077-58e7-4908-a5d9-e9d49706d27f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jx4lj
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jx4lj
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-jx4lj
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-jx4lj
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:31Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://d890ad7692c8bd9308f0a165671db1631b5b2b8fa7a05c9401c7961da3e69680
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:35Z"
    - containerID: containerd://fd86e8ebbc24006bf1f21ba106fcf1ef6403e037c7a2e77f18c358da6747fc4e
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    - containerID: containerd://30f40fc810639a99e21136dffc45f77c476c84d059d5435250cf575922bf3d84
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:32Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-06-25T23:16:31Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:40Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-kvgkl
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540427"
    uid: 6e956a96-f32f-471a-bb8c-0c7a58a1bf6b
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h5cz
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h5cz
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8h5cz
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-8h5cz
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:43Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:40Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://a11fcdc96a60bc9b13604a16b7006fbe8bda2556547481d9d858d07371f10132
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:42Z"
    - containerID: containerd://297ae473568a9fcb9a897acd2a97157c081a39e947c3259a63a83f72a77751f7
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:40Z"
    - containerID: containerd://80c6bca0a56c00816682dd117ce1ca85c15ecedbf6f68c2680390542a6ceb1a2
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:40Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-06-25T23:16:40Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:51Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-m5msd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540641"
    uid: fc2aeb23-abd1-4210-bad7-5f710c0bd1e3
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v8v6m
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v8v6m
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-v8v6m
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-v8v6m
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:54Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:51Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:54Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:54Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:51Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://be4f0086666a1e9c0fcd18bca232f85fec5f5085aa1e60efad012073ee07b696
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:54Z"
    - containerID: containerd://56654e2f5713b06693773391e9584b987e3cb9ce7d7bef1a14201ef95f0c5f33
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:51Z"
    - containerID: containerd://38f3de3a06415d25df5efeb95873c4200ca63e3f625b3ff35ef04a4b295677ea
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:52Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-06-25T23:16:51Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:27Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-mlxh4
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540047"
    uid: 0b97a333-e0f8-4fdf-a8c6-b4f24c7a5566
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44df9
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44df9
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-44df9
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-44df9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:30Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:30Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:30Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://0c6be9c53a5655873c7391219aa22dd2c83ed264da80d2714e57be8ad5e749c5
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:29Z"
    - containerID: containerd://c0cbf9fb76ff08e112da00ad4f0f934426d5be71bece7090b4e951745c5afab4
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    - containerID: containerd://5cc1fc81847fd94a357a50561441f14819fc2a395d9a3f576fe4d540536e7a77
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-06-25T23:16:27Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:36Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-rzg4d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540330"
    uid: eda44b94-ef5b-4fa3-8e46-46a2668d8c8d
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pjr5q
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pjr5q
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-pjr5q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-pjr5q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:36Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:36Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://c10526be6cb6f62b7ab35e0ab6ba8e03443950b4f1dd8aa741674c682d748ebc
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:39Z"
    - containerID: containerd://ba5beeb080ce2d63bf345d545c4ee157590631822fdb525f35bf89b5d05f84c9
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:36Z"
    - containerID: containerd://18075ab196a40c2936a3002b23dfc1c564271bb668c766f0ce4a2fbd9b83b9fb
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:36Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-06-25T23:16:36Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:23Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-smfn2
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "86042559"
    uid: 5ca07643-d0ff-4f63-8c74-02f8a56bce33
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j86kb
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j86kb
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-j86kb
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-j86kb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:23Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:45Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:23Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://e6ed51607814cb82fad4ca465ba5bcdd27e5f79892b136cf81d91eddbfd5105f
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState:
        terminated:
          containerID: containerd://32d6b280bd8036c238402a783df120f2e4f212feaa20a43a1e3029b5c49e40a8
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:25Z"
      name: azurefile
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    - containerID: containerd://d06b6417c146e049e7391daf96efbe716de278aca9eb69e80f801e323d92d271
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState:
        terminated:
          containerID: containerd://6817472692a5a103f128ae5251d8dae6fc6abf5ff7478b3f02cd5d6278da7dd3
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:23Z"
      name: liveness-probe
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:43Z"
    - containerID: containerd://9b8346c722dae13bc86f57e73f1dec16ca171a2bd35eaae9a068fcdfbd1fd6f9
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState:
        terminated:
          containerID: containerd://d3dfd97a52315154702e88d9dce8d6d58c76efe04d1790bd33db3f6cd6c7a006
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-06-25T23:16:23Z"
      name: node-driver-registrar
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:44Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-06-25T23:16:23Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:47Z"
    generateName: csi-azurefile-node-
    labels:
      app: csi-azurefile-node
      controller-revision-hash: 649bb7796b
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "4"
    name: csi-azurefile-node-trkk8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: csi-azurefile-node
      uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
    resourceVersion: "81540570"
    uid: 5edde715-e7f7-4ac0-a67f-68dc01b44c77
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - args:
      - --csi-address=/csi/csi.sock
      - --probe-timeout=10s
      - --health-port=29613
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imagePullPolicy: IfNotPresent
      name: liveness-probe
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p224q
        readOnly: true
    - args:
      - --csi-address=$(ADDRESS)
      - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: ADDRESS
        value: /csi/csi.sock
      - name: DRIVER_REG_SOCK_PATH
        value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imagePullPolicy: IfNotPresent
      livenessProbe:
        exec:
          command:
          - /csi-node-driver-registrar
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --mode=kubelet-registration-probe
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 30
      name: node-driver-registrar
      resources:
        limits:
          memory: 100Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /registration
        name: registration-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p224q
        readOnly: true
    - args:
      - --v=5
      - --endpoint=$(CSI_ENDPOINT)
      - --nodeid=$(KUBE_NODE_NAME)
      - --enable-get-volume-stats=true
      - --mount-permissions=0777
      - --metrics-address=0.0.0.0:29615
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: AZURE_CREDENTIAL_FILE
        value: /etc/kubernetes/azure.json
      - name: CSI_ENDPOINT
        value: unix:///csi/csi.sock
      - name: KUBE_NODE_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: spec.nodeName
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 5
        httpGet:
          path: /healthz
          port: healthz
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 30
        successThreshold: 1
        timeoutSeconds: 30
      name: azurefile
      ports:
      - containerPort: 29613
        hostPort: 29613
        name: healthz
        protocol: TCP
      - containerPort: 29615
        hostPort: 29615
        name: metrics
        protocol: TCP
      resources:
        limits:
          memory: 400Mi
        requests:
          cpu: 10m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /csi
        name: socket-dir
      - mountPath: /var/lib/kubelet/
        mountPropagation: Bidirectional
        name: mountpoint-dir
      - mountPath: /etc/kubernetes/
        name: azure-cred
      - mountPath: /dev
        name: device-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p224q
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    hostNetwork: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: csi-azurefile-node-sa
    serviceAccountName: csi-azurefile-node-sa
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /var/lib/kubelet/plugins/file.csi.azure.com
        type: DirectoryOrCreate
      name: socket-dir
    - hostPath:
        path: /var/lib/kubelet/
        type: DirectoryOrCreate
      name: mountpoint-dir
    - hostPath:
        path: /var/lib/kubelet/plugins_registry/
        type: DirectoryOrCreate
      name: registration-dir
    - hostPath:
        path: /etc/kubernetes/
        type: DirectoryOrCreate
      name: azure-cred
    - hostPath:
        path: /dev
        type: Directory
      name: device-dir
    - name: kube-api-access-p224q
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:51Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:47Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:51Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:51Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:47Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://64d9b96db6248f14a5cd31f57d1957188a464d27101ba7677fa5cf7098f24e40
      image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
      imageID: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi@sha256:e678cd7b0e362a551ad7eda9621d56e15800ce03e7472c97701ae6a705fcace0
      lastState: {}
      name: azurefile
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:50Z"
    - containerID: containerd://a2e7cc0fc1da68284558f81a2ec32f16aa60aac63d290d21430a0f7248ebef13
      image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
      imageID: sha256:36d7b51905972e9344587e53702442dc092bbc43daf6d6e7967bf8f35f49896f
      lastState: {}
      name: liveness-probe
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:48Z"
    - containerID: containerd://d282ff35e65e4bdd06c9057dc9a9c0bb17b85fbf52aa6fc345678f7ecb6bdbc4
      image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
      imageID: sha256:03a0bf5a23a8a437f8719e4accf8e28782135f110e8be90b2189d5c819140417
      lastState: {}
      name: node-driver-registrar
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:48Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-25T23:16:47Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919
      checksum/service-account-key: 27e7f3f8b8874d3095dd8b727f616c18d9adcad437dedc2af9a6f6de8f6e17f8
    creationTimestamp: "2025-06-13T00:40:44Z"
    generateName: konnectivity-agent-6dfd6cc99b-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6dfd6cc99b
    name: konnectivity-agent-6dfd6cc99b-b5cg9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-6dfd6cc99b
      uid: d0946177-2045-49e8-9a50-bc41f7a52cbd
    resourceVersion: "70015781"
    uid: 6d8c3067-e8c7-411b-b20f-d269f00ec28a
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:45Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:44Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:44Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://409af64f2e202976381b82d1fd3bef1b9c986bb86301aab934bd98b251ab0b74
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: sha256:52402add5c819ae82b67c0a3d7774a145cc21b98e59ebaf82e857b9403c016ae
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:45Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.29
    podIPs:
    - ip: 10.244.1.29
    qosClass: Burstable
    startTime: "2025-06-13T00:40:44Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      checksum/client-cert: f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919
      checksum/service-account-key: 27e7f3f8b8874d3095dd8b727f616c18d9adcad437dedc2af9a6f6de8f6e17f8
    creationTimestamp: "2025-06-13T00:40:38Z"
    generateName: konnectivity-agent-6dfd6cc99b-
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6dfd6cc99b
    name: konnectivity-agent-6dfd6cc99b-x7lkq
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-6dfd6cc99b
      uid: d0946177-2045-49e8-9a50-bc41f7a52cbd
    resourceVersion: "70015690"
    uid: 0ef342d6-7d8e-47a4-ab6a-d59e25bd9c31
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - konnectivity-agent
            topologyKey: kubernetes.io/hostname
          weight: 5
    automountServiceAccountToken: false
    containers:
    - args:
      - --proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - --proxy-server-port=443
      - --health-server-port=8082
      - --keepalive-time=30s
      - --agent-key=/certs/client.key
      - --agent-cert=/certs/client.crt
      - --ca-cert=/certs/ca.crt
      - --agent-identifiers=default-route=true
      - --alpn-proto=konnectivity
      - -v=2
      command:
      - /proxy-agent
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        initialDelaySeconds: 30
        periodSeconds: 60
        successThreshold: 1
        timeoutSeconds: 60
      name: konnectivity-agent
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /ready
          port: 8082
          scheme: HTTP
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      resources:
        limits:
          cpu: "1"
          memory: 1Gi
        requests:
          cpu: 20m
          memory: 20Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /certs
        name: certs
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent
    serviceAccountName: konnectivity-agent
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: certs
      secret:
        defaultMode: 420
        secretName: konnectivity-certs
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:38Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9afc5c4e86e6204ded0c0d2144750850b60ef63f667409062d65f472856ecf6a
      image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
      imageID: sha256:52402add5c819ae82b67c0a3d7774a145cc21b98e59ebaf82e857b9403c016ae
      lastState: {}
      name: konnectivity-agent
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:40Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.17
    podIPs:
    - ip: 10.244.1.17
    qosClass: Burstable
    startTime: "2025-06-13T00:40:38Z"
- apiVersion: v1
  kind: Pod
  metadata:
    annotations:
      cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
      seccomp.security.alpha.kubernetes.io/pod: runtime/default
    creationTimestamp: "2025-06-13T00:40:39Z"
    generateName: konnectivity-agent-autoscaler-cdfc7c46-
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: cdfc7c46
    name: konnectivity-agent-autoscaler-cdfc7c46-m9qjv
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: konnectivity-agent-autoscaler-cdfc7c46
      uid: e7993526-4680-4140-9324-fca39cc9036b
    resourceVersion: "70015654"
    uid: 9db78f35-07dd-452d-8123-54a73a17f061
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
    containers:
    - command:
      - /cluster-proportional-autoscaler
      - --namespace=kube-system
      - --configmap=konnectivity-agent-autoscaler
      - --target=deployment/konnectivity-agent
      - --logtostderr=true
      - --v=2
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /last-poll
          port: 8080
          scheme: HTTP
        initialDelaySeconds: 10
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      name: autoscaler
      resources:
        limits:
          cpu: 350m
          memory: 512M
        requests:
          cpu: 20m
          memory: 10Mi
      securityContext:
        capabilities:
          drop:
          - ALL
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xd9p7
        readOnly: true
    dnsPolicy: Default
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: konnectivity-agent-autoscaler
    serviceAccountName: konnectivity-agent-autoscaler
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - name: kube-api-access-xd9p7
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:39Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:40Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:39Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://8c988c96038e687ba5f2fc9cd993384185063d6333cf0d15a85f9495a145bc40
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
      imageID: sha256:c9b34e1bd7ae78fe4fb60c1584b1f95e7649e4ccc11fb0b3b32b55d56a3c9986
      lastState: {}
      name: autoscaler
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:40Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.18
    podIPs:
    - ip: 10.244.1.18
    qosClass: Burstable
    startTime: "2025-06-13T00:40:39Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:40:10Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-4dpkz
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "70014964"
    uid: d499889a-3e2c-48d9-a183-8abd02e56de8
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000d
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qkrw6
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-qkrw6
        readOnly: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-qkrw6
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:15Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:22Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:23Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:23Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:40:10Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://9742076e905a33bc82246d01b80220308c8bf9ee2643b9560032a11ea34b8696
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:40:22Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    initContainerStatuses:
    - containerID: containerd://3959f1c9e85d8a717623fa3688633f79d01addc9c19d9c308fdd85fb1cf636c2
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3959f1c9e85d8a717623fa3688633f79d01addc9c19d9c308fdd85fb1cf636c2
          exitCode: 0
          finishedAt: "2025-06-13T00:40:15Z"
          reason: Completed
          startedAt: "2025-06-13T00:40:15Z"
    phase: Running
    podIP: 10.73.111.136
    podIPs:
    - ip: 10.73.111.136
    qosClass: Burstable
    startTime: "2025-06-13T00:40:10Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:13:29Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-5896f
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "52041523"
    uid: 57ba1727-c68e-4c4d-8dd7-de82d0dc8370
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000008
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8fzq
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-p8fzq
        readOnly: true
    nodeName: aks-dvmsscspto01-16171445-vmss000008
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-p8fzq
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:40Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:41Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:42Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:42Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:13:29Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://649d6ab95ad23b8c0ec23c1e6f04ccd9c4d84351af419a1f133f5aab29045313
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:13:41Z"
    hostIP: 10.73.111.140
    hostIPs:
    - ip: 10.73.111.140
    initContainerStatuses:
    - containerID: containerd://b8496eabbbff1edb0007f2a1eec33aad26b89144fcd85bc37a0453015dedc0f0
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://b8496eabbbff1edb0007f2a1eec33aad26b89144fcd85bc37a0453015dedc0f0
          exitCode: 0
          finishedAt: "2025-05-23T02:13:40Z"
          reason: Completed
          startedAt: "2025-05-23T02:13:39Z"
    phase: Running
    podIP: 10.73.111.140
    podIPs:
    - ip: 10.73.111.140
    qosClass: Burstable
    startTime: "2025-05-23T02:13:29Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T01:59:25Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-825wb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "52032275"
    uid: 637511a7-d72c-4343-8bc3-281d9c7a4afa
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscupto01-24536590-vmss000006
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m7rsb
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-m7rsb
        readOnly: true
    nodeName: aks-dvmsscupto01-24536590-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-m7rsb
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:31Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:38Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:39Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:39Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T01:59:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://36f9ec22cf4bf80df4f291dbcb6d36be9f456ec4e823baacdbb4825dc59a5944
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T01:59:38Z"
    hostIP: 10.73.111.132
    hostIPs:
    - ip: 10.73.111.132
    initContainerStatuses:
    - containerID: containerd://7b99885b2537085a8c9cdff50ad66c154fec2b6441b9430f567b7c25c5f19081
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://7b99885b2537085a8c9cdff50ad66c154fec2b6441b9430f567b7c25c5f19081
          exitCode: 0
          finishedAt: "2025-05-23T01:59:31Z"
          reason: Completed
          startedAt: "2025-05-23T01:59:30Z"
    phase: Running
    podIP: 10.73.111.132
    podIPs:
    - ip: 10.73.111.132
    qosClass: Burstable
    startTime: "2025-05-23T01:59:26Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:53:20Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-g8mh9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "52075799"
    uid: 4000150c-290d-49a2-aa71-81de846463ef
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssfpto01-39090917-vmss000002
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ktm5
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-8ktm5
        readOnly: true
    nodeName: aks-dvmsssfpto01-39090917-vmss000002
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-8ktm5
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:26Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:33Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:34Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:34Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:53:20Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://3591640ad69fe3db9ec9df35c1fa2b9334861db900a5c4566cb793a53111a70a
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:53:33Z"
    hostIP: 10.73.111.139
    hostIPs:
    - ip: 10.73.111.139
    initContainerStatuses:
    - containerID: containerd://d5d3622e9239ce038893b739f5fc3d5ef87c72420c2c35bc75e968e684eebb16
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://d5d3622e9239ce038893b739f5fc3d5ef87c72420c2c35bc75e968e684eebb16
          exitCode: 0
          finishedAt: "2025-05-23T02:53:26Z"
          reason: Completed
          startedAt: "2025-05-23T02:53:25Z"
    phase: Running
    podIP: 10.73.111.139
    podIPs:
    - ip: 10.73.111.139
    qosClass: Burstable
    startTime: "2025-05-23T02:53:22Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:16:37Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-kfcx8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "52043643"
    uid: 47dfa252-d970-4471-8441-89a3ed817b2f
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000009
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xz2z8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xz2z8
        readOnly: true
    nodeName: aks-dvmsscspto01-16171445-vmss000009
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-xz2z8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:47Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:48Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:49Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:49Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:16:37Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://bec4e65693c50f2cffec10539589de1bfc342bb9f063bf254721696c6679c6be
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:16:48Z"
    hostIP: 10.73.111.138
    hostIPs:
    - ip: 10.73.111.138
    initContainerStatuses:
    - containerID: containerd://1997cd525bcbb4a88f8cef65e6322e280387e0a5c2b3cb291e16e2c1f0345054
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://1997cd525bcbb4a88f8cef65e6322e280387e0a5c2b3cb291e16e2c1f0345054
          exitCode: 0
          finishedAt: "2025-05-23T02:16:47Z"
          reason: Completed
          startedAt: "2025-05-23T02:16:47Z"
    phase: Running
    podIP: 10.73.111.138
    podIPs:
    - ip: 10.73.111.138
    qosClass: Burstable
    startTime: "2025-05-23T02:16:37Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-13T00:32:15Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-mvt76
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "70008724"
    uid: 27b23ba2-3502-429e-8998-c9080795ef61
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsssypto01-16550377-vmss00000c
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-68g6d
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-68g6d
        readOnly: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-68g6d
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-13T00:32:15Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://65019df06c898000f2db69becd6d00798f99f21edc6b27a89aabad9e918c05b4
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-13T00:32:28Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    initContainerStatuses:
    - containerID: containerd://72363145c25f808999cb177540659339113e72f430dd69f54369f1d2366c2537
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://72363145c25f808999cb177540659339113e72f430dd69f54369f1d2366c2537
          exitCode: 0
          finishedAt: "2025-06-13T00:32:27Z"
          reason: Completed
          startedAt: "2025-06-13T00:32:26Z"
    phase: Running
    podIP: 10.73.111.134
    podIPs:
    - ip: 10.73.111.134
    qosClass: Burstable
    startTime: "2025-06-13T00:32:15Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:26:13Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-wzlpx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "86043517"
    uid: 34f10efc-c2f5-4e87-8f39-11dddfe86217
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmssslpto01-17576862-vmss000006
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nwc8
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-9nwc8
        readOnly: true
    nodeName: aks-dvmssslpto01-17576862-vmss000006
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-9nwc8
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:44Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:26:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:46Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-07-01T04:35:46Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:26:13Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://dc947d0968ad4b7c572a5931cbfbdee70b1ae0720b5a8fad8f73b805a2ad3457
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState:
        terminated:
          containerID: containerd://f2c5af57ffaa558a02615e0d4489b80668117716537789be3ce6463c78cb82a3
          exitCode: 255
          finishedAt: "2025-07-01T04:35:38Z"
          reason: Unknown
          startedAt: "2025-05-23T02:26:24Z"
      name: kube-proxy
      ready: true
      restartCount: 1
      started: true
      state:
        running:
          startedAt: "2025-07-01T04:35:45Z"
    hostIP: 10.73.111.135
    hostIPs:
    - ip: 10.73.111.135
    initContainerStatuses:
    - containerID: containerd://d020d9ca2f0ae9d1785dae827352eb2844c1eabad30e9e27d7e6af9cb2414414
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 1
      started: false
      state:
        terminated:
          containerID: containerd://d020d9ca2f0ae9d1785dae827352eb2844c1eabad30e9e27d7e6af9cb2414414
          exitCode: 0
          finishedAt: "2025-07-01T04:35:44Z"
          reason: Completed
          startedAt: "2025-07-01T04:35:43Z"
    phase: Running
    podIP: 10.73.111.135
    podIPs:
    - ip: 10.73.111.135
    qosClass: Burstable
    startTime: "2025-05-23T02:26:13Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-05-23T02:10:16Z"
    generateName: kube-proxy-
    labels:
      component: kube-proxy
      controller-revision-hash: 6ff5dfdff9
      kubernetes.azure.com/managedby: aks
      pod-template-generation: "1"
      tier: node
    name: kube-proxy-xqbnx
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: DaemonSet
      name: kube-proxy
      uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
    resourceVersion: "52039374"
    uid: b6f2661a-7f3a-43c2-8ce1-97036251e65e
  spec:
    affinity:
      nodeAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchFields:
            - key: metadata.name
              operator: In
              values:
              - aks-dvmsscspto01-16171445-vmss000007
    containers:
    - command:
      - kube-proxy
      - --conntrack-max-per-core=0
      - --metrics-bind-address=0.0.0.0:10249
      - --cluster-cidr=10.244.0.0/16
      - --detect-local-mode=ClusterCIDR
      - --pod-interface-name-prefix=
      - --v=3
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /run/xtables.lock
        name: iptableslock
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l7nv9
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    hostNetwork: true
    initContainers:
    - command:
      - /bin/sh
      - -c
      - |
        get_num_cpu() {
          # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
          # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
          sys_cpu_online=$(cat /sys/devices/system/cpu/online)
          result=0
          OLD_IFS="$IFS"; IFS=","
          for rng in "$sys_cpu_online"; do
            if echo "$rng" | grep -q -- "-"; then
              min=${rng%-*}; max=${rng#*-}
              if [ "$min" -le "$max" ]; then
                result=$((result + (max - min + 1)))
              fi
            else
              result=$((result + 1))
            fi
          done
          IFS="$OLD_IFS"
          echo $result
        }

        SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
        echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
        DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
        if [ -z "$DESIRED" ]; then
          NUM_CPU=$(get_num_cpu)
          DESIRED=$((32768*$NUM_CPU))
          if [ $DESIRED -lt 131072 ]; then
            DESIRED=131072
          fi

          echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
          echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
          echo $DESIRED > $SYSCTL
        else
          echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
          echo "Setting nf_conntrack_max to $DESIRED."
          echo $DESIRED > $SYSCTL
        fi
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imagePullPolicy: IfNotPresent
      name: kube-proxy-bootstrap
      resources:
        requests:
          cpu: 100m
      securityContext:
        privileged: true
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/sysctl.d
        name: sysctls
      - mountPath: /lib/modules
        name: modules
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-l7nv9
        readOnly: true
    nodeName: aks-dvmsscspto01-16171445-vmss000007
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext: {}
    serviceAccount: kube-proxy
    serviceAccountName: kube-proxy
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      operator: Exists
    - effect: NoSchedule
      operator: Exists
    volumes:
    - hostPath:
        path: /run/xtables.lock
        type: FileOrCreate
      name: iptableslock
    - hostPath:
        path: /etc/sysctl.d
        type: Directory
      name: sysctls
    - hostPath:
        path: /lib/modules
        type: Directory
      name: modules
    - name: kube-api-access-l7nv9
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:28Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:29Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:29Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-05-23T02:10:16Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://79f7bf207900d0e6317a0f9079af1b7e005fcae2e78de5dac69d18d6b71ae89a
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-05-23T02:10:28Z"
    hostIP: 10.73.111.137
    hostIPs:
    - ip: 10.73.111.137
    initContainerStatuses:
    - containerID: containerd://3b80e600ada9f087ad5282f13771691a2fc2fdd91ca679b34e1a5cec29785b03
      image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
      imageID: mcr.microsoft.com/oss/kubernetes/kube-proxy@sha256:0f43277371f1e7c7ff48455d17c67f5b814d4fcc522aad9b271c4d54d3a992c7
      lastState: {}
      name: kube-proxy-bootstrap
      ready: true
      restartCount: 0
      started: false
      state:
        terminated:
          containerID: containerd://3b80e600ada9f087ad5282f13771691a2fc2fdd91ca679b34e1a5cec29785b03
          exitCode: 0
          finishedAt: "2025-05-23T02:10:27Z"
          reason: Completed
          startedAt: "2025-05-23T02:10:27Z"
    phase: Running
    podIP: 10.73.111.137
    podIPs:
    - ip: 10.73.111.137
    qosClass: Burstable
    startTime: "2025-05-23T02:10:16Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:25Z"
    generateName: metrics-server-54b79754f7-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 54b79754f7
    name: metrics-server-54b79754f7-crl7m
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-54b79754f7
      uid: 094a1725-998d-426c-807b-fa84cca09b90
    resourceVersion: "81541072"
    uid: 722e1879-3863-445c-a850-f470359a1efd
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xxqqh
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 155m
          memory: 136Mi
        requests:
          cpu: 155m
          memory: 136Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-xxqqh
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000c
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-xxqqh
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:17:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:17:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:25Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://24896d4c0020465403ba05e5e548e2f2cb7535441ab5b9f9109588a60da14259
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:d25bdf78b71e2b20350d86014ac9840bc61e8d9c2e44c18bd06c509c90cf7af5
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:27Z"
    - containerID: containerd://4391ca512193368b92d2115bcb132457a11674d23a469759992d2e8e536efd97
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imageID: sha256:f0d91eb983b0c564c42c340014176703b85e868c21e56573427d0109b0684e73
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:25Z"
    hostIP: 10.73.111.134
    hostIPs:
    - ip: 10.73.111.134
    phase: Running
    podIP: 10.244.1.35
    podIPs:
    - ip: 10.244.1.35
    qosClass: Burstable
    startTime: "2025-06-25T23:16:25Z"
- apiVersion: v1
  kind: Pod
  metadata:
    creationTimestamp: "2025-06-25T23:16:24Z"
    generateName: metrics-server-54b79754f7-
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 54b79754f7
    name: metrics-server-54b79754f7-pbf94
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: ReplicaSet
      name: metrics-server-54b79754f7
      uid: 094a1725-998d-426c-807b-fa84cca09b90
    resourceVersion: "81541088"
    uid: bf90e627-9bd6-42da-8483-e6305c47e90e
  spec:
    affinity:
      nodeAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - key: kubernetes.azure.com/mode
              operator: In
              values:
              - system
          weight: 100
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - key: kubernetes.azure.com/cluster
              operator: Exists
            - key: type
              operator: NotIn
              values:
              - virtual-kubelet
            - key: kubernetes.io/os
              operator: In
              values:
              - linux
      podAntiAffinity:
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: topology.kubernetes.io/zone
          weight: 10
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - key: k8s-app
                operator: In
                values:
                - metrics-server
            topologyKey: kubernetes.io/hostname
          weight: 5
    containers:
    - command:
      - /pod_nanny
      - --config-dir=/etc/config
      - --cpu=150m
      - --extra-cpu=0.5m
      - --memory=100Mi
      - --extra-memory=4Mi
      - --poll-period=180000
      - --threshold=5
      - --deployment=metrics-server
      - --container=metrics-server
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: MY_POD_NAME
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.name
      - name: MY_POD_NAMESPACE
        valueFrom:
          fieldRef:
            apiVersion: v1
            fieldPath: metadata.namespace
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imagePullPolicy: IfNotPresent
      name: metrics-server-vpa
      resources:
        limits:
          cpu: 100m
          memory: 300Mi
        requests:
          cpu: 5m
          memory: 30Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /etc/config
        name: metrics-server-config-volume
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29jzr
        readOnly: true
    - command:
      - /metrics-server
      - --kubelet-insecure-tls
      - --kubelet-preferred-address-types=InternalIP
      - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - --cert-dir=/tmp
      - --secure-port=4443
      env:
      - name: KUBERNETES_SERVICE_HOST
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      - name: KUBERNETES_PORT
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP
        value: tcp://d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io:443
      - name: KUBERNETES_PORT_443_TCP_ADDR
        value: d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
      imagePullPolicy: IfNotPresent
      livenessProbe:
        failureThreshold: 3
        httpGet:
          path: /livez
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 20
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      name: metrics-server
      ports:
      - containerPort: 4443
        name: ms-https
        protocol: TCP
      readinessProbe:
        failureThreshold: 3
        httpGet:
          path: /readyz
          port: ms-https
          scheme: HTTPS
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 10
      resources:
        limits:
          cpu: 155m
          memory: 136Mi
        requests:
          cpu: 155m
          memory: 136Mi
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        readOnlyRootFilesystem: true
        runAsNonRoot: true
        runAsUser: 65532
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      volumeMounts:
      - mountPath: /tmp
        name: tmp-dir
      - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
        name: kube-api-access-29jzr
        readOnly: true
    dnsPolicy: ClusterFirst
    enableServiceLinks: true
    nodeName: aks-dvmsssypto01-16550377-vmss00000d
    preemptionPolicy: PreemptLowerPriority
    priority: 2000001000
    priorityClassName: system-node-critical
    restartPolicy: Always
    schedulerName: default-scheduler
    securityContext:
      seccompProfile:
        type: RuntimeDefault
    serviceAccount: metrics-server
    serviceAccountName: metrics-server
    terminationGracePeriodSeconds: 30
    tolerations:
    - key: CriticalAddonsOnly
      operator: Exists
    - effect: NoExecute
      key: node.kubernetes.io/unreachable
      operator: Exists
      tolerationSeconds: 30
    - effect: NoExecute
      key: node.kubernetes.io/not-ready
      operator: Exists
      tolerationSeconds: 30
    - effect: NoSchedule
      key: node.kubernetes.io/memory-pressure
      operator: Exists
    volumes:
    - emptyDir: {}
      name: tmp-dir
    - configMap:
        defaultMode: 420
        name: metrics-server-config
        optional: true
      name: metrics-server-config-volume
    - name: kube-api-access-29jzr
      projected:
        defaultMode: 420
        sources:
        - serviceAccountToken:
            expirationSeconds: 3607
            path: token
        - configMap:
            items:
            - key: ca.crt
              path: ca.crt
            name: kube-root-ca.crt
        - downwardAPI:
            items:
            - fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
              path: namespace
  status:
    conditions:
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:27Z"
      status: "True"
      type: PodReadyToStartContainers
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: Initialized
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:17:35Z"
      status: "True"
      type: Ready
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:17:35Z"
      status: "True"
      type: ContainersReady
    - lastProbeTime: null
      lastTransitionTime: "2025-06-25T23:16:24Z"
      status: "True"
      type: PodScheduled
    containerStatuses:
    - containerID: containerd://ab0f83832652c64964fd513b9bc138e07fcbaaf739c1f53d72961c9b5cc4746f
      image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
      imageID: mcr.microsoft.com/oss/v2/kubernetes/metrics-server@sha256:d25bdf78b71e2b20350d86014ac9840bc61e8d9c2e44c18bd06c509c90cf7af5
      lastState: {}
      name: metrics-server
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:26Z"
    - containerID: containerd://d8b545a37d9506867f4a72644dfac889667077192d50dcd5611b02c693e7d550
      image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
      imageID: sha256:f0d91eb983b0c564c42c340014176703b85e868c21e56573427d0109b0684e73
      lastState: {}
      name: metrics-server-vpa
      ready: true
      restartCount: 0
      started: true
      state:
        running:
          startedAt: "2025-06-25T23:16:25Z"
    hostIP: 10.73.111.136
    hostIPs:
    - ip: 10.73.111.136
    phase: Running
    podIP: 10.244.2.12
    podIPs:
    - ip: 10.244.2.12
    qosClass: Burstable
    startTime: "2025-06-25T23:16:24Z"
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile"},"name":"azure-policy-webhook-service","namespace":"kube-system"},"spec":{"ports":[{"name":"webhook","port":443,"targetPort":9449}],"selector":{"app":"azure-policy-webhook"}}}
    creationTimestamp: "2025-03-11T19:24:11Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
    name: azure-policy-webhook-service
    namespace: kube-system
    resourceVersion: "687"
    uid: 3418ff16-262f-4636-9f72-6ca1d382e71f
  spec:
    clusterIP: 10.0.36.80
    clusterIPs:
    - 10.0.36.80
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: webhook
      port: 443
      protocol: TCP
      targetPort: 9449
    selector:
      app: azure-policy-webhook
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS"},"name":"kube-dns","namespace":"kube-system"},"spec":{"clusterIP":"10.0.0.10","ports":[{"name":"dns","port":53,"protocol":"UDP"},{"name":"dns-tcp","port":53,"protocol":"TCP"}],"selector":{"k8s-app":"kube-dns"}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
    name: kube-dns
    namespace: kube-system
    resourceVersion: "522"
    uid: ebd980a8-6ff1-4b6e-b1be-843412bcbd94
  spec:
    clusterIP: 10.0.0.10
    clusterIPs:
    - 10.0.0.10
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: dns
      port: 53
      protocol: UDP
      targetPort: 53
    - name: dns-tcp
      port: 53
      protocol: TCP
      targetPort: 53
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.io/cluster-service":"true","kubernetes.io/name":"Metrics-server"},"name":"metrics-server","namespace":"kube-system"},"spec":{"ports":[{"port":443,"protocol":"TCP","targetPort":"ms-https"}],"selector":{"k8s-app":"metrics-server"}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: Metrics-server
    name: metrics-server
    namespace: kube-system
    resourceVersion: "586"
    uid: f643c80b-247c-432e-9694-3ad1141fa3ec
  spec:
    clusterIP: 10.0.6.170
    clusterIPs:
    - 10.0.6.170
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - port: 443
      protocol: TCP
      targetPort: ms-https
    selector:
      k8s-app: metrics-server
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v4m-prometheus-operator
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-04-21T05:40:22Z"
    labels:
      app: v4m-coredns
      app.kubernetes.io/instance: v4m-prometheus-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: v4m
      app.kubernetes.io/version: 68.3.0
      chart: kube-prometheus-stack-68.3.0
      heritage: Helm
      jobLabel: coredns
      release: v4m-prometheus-operator
      sas.com/monitoring-base: kube-viya-monitoring
    name: v4m-coredns
    namespace: kube-system
    resourceVersion: "24673371"
    uid: cb031464-c5c8-4b14-85ff-be16d91df4f9
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 9153
      protocol: TCP
      targetPort: 9153
    selector:
      k8s-app: kube-dns
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v4m-prometheus-operator
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-04-21T05:40:22Z"
    labels:
      app: v4m-kube-controller-manager
      app.kubernetes.io/instance: v4m-prometheus-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: v4m
      app.kubernetes.io/version: 68.3.0
      chart: kube-prometheus-stack-68.3.0
      heritage: Helm
      jobLabel: kube-controller-manager
      release: v4m-prometheus-operator
      sas.com/monitoring-base: kube-viya-monitoring
    name: v4m-kube-controller-manager
    namespace: kube-system
    resourceVersion: "24673372"
    uid: 71b46901-ba48-458e-a812-4c97a2b19d8e
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10257
      protocol: TCP
      targetPort: 10257
    selector:
      component: kube-controller-manager
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v4m-prometheus-operator
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-04-21T05:40:22Z"
    labels:
      app: v4m-kube-etcd
      app.kubernetes.io/instance: v4m-prometheus-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: v4m
      app.kubernetes.io/version: 68.3.0
      chart: kube-prometheus-stack-68.3.0
      heritage: Helm
      jobLabel: kube-etcd
      release: v4m-prometheus-operator
      sas.com/monitoring-base: kube-viya-monitoring
    name: v4m-kube-etcd
    namespace: kube-system
    resourceVersion: "24673375"
    uid: 8081cd18-6c3f-4f9a-8c36-7af39a036b00
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 2381
      protocol: TCP
      targetPort: 2381
    selector:
      component: etcd
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v4m-prometheus-operator
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-04-21T05:40:22Z"
    labels:
      app: v4m-kube-proxy
      app.kubernetes.io/instance: v4m-prometheus-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: v4m
      app.kubernetes.io/version: 68.3.0
      chart: kube-prometheus-stack-68.3.0
      heritage: Helm
      jobLabel: kube-proxy
      release: v4m-prometheus-operator
      sas.com/monitoring-base: kube-viya-monitoring
    name: v4m-kube-proxy
    namespace: kube-system
    resourceVersion: "24673373"
    uid: 70b4520f-7152-4399-9c76-f42daa58a244
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10249
      protocol: TCP
      targetPort: 10249
    selector:
      k8s-app: kube-proxy
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    annotations:
      meta.helm.sh/release-name: v4m-prometheus-operator
      meta.helm.sh/release-namespace: monitoring
    creationTimestamp: "2025-04-21T05:40:22Z"
    labels:
      app: v4m-kube-scheduler
      app.kubernetes.io/instance: v4m-prometheus-operator
      app.kubernetes.io/managed-by: Helm
      app.kubernetes.io/part-of: v4m
      app.kubernetes.io/version: 68.3.0
      chart: kube-prometheus-stack-68.3.0
      heritage: Helm
      jobLabel: kube-scheduler
      release: v4m-prometheus-operator
      sas.com/monitoring-base: kube-viya-monitoring
    name: v4m-kube-scheduler
    namespace: kube-system
    resourceVersion: "24673374"
    uid: f6e0a893-b7a9-4fbf-b890-61823a7bdb13
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    ipFamilyPolicy: SingleStack
    ports:
    - name: http-metrics
      port: 10259
      protocol: TCP
      targetPort: 10259
    selector:
      component: kube-scheduler
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: v1
  kind: Service
  metadata:
    creationTimestamp: "2025-04-21T05:40:23Z"
    labels:
      app.kubernetes.io/managed-by: prometheus-operator
      app.kubernetes.io/name: kubelet
      k8s-app: kubelet
    name: v4m-kubelet
    namespace: kube-system
    resourceVersion: "24673558"
    uid: 2be063ce-9515-44b8-8e24-cd550b21ff98
  spec:
    clusterIP: None
    clusterIPs:
    - None
    internalTrafficPolicy: Cluster
    ipFamilies:
    - IPv4
    - IPv6
    ipFamilyPolicy: RequireDualStack
    ports:
    - name: https-metrics
      port: 10250
      protocol: TCP
      targetPort: 10250
    - name: http-metrics
      port: 10255
      protocol: TCP
      targetPort: 10255
    - name: cadvisor
      port: 4194
      protocol: TCP
      targetPort: 4194
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"secrets-store-csi-driver","kubernetes.azure.com/managedby":"aks"},"name":"aks-secrets-store-csi-driver","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"secrets-store-csi-driver"}},"template":{"metadata":{"labels":{"app":"secrets-store-csi-driver","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=/csi/csi.sock","--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock"],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock","--mode=kubelet-registration-probe"]},"initialDelaySeconds":30,"timeoutSeconds":15},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["-v=2","--log-format-json=false","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--provider-volume=/var/run/secrets-store-csi-providers","--additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers","--enable-secret-rotation=true","--rotation-poll-interval=2m","--metrics-addr=:8095","--max-call-recv-msg-size=4194304"],"env":[{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":15,"timeoutSeconds":10},"name":"secrets-store","ports":[{"containerPort":9808,"name":"healthz","protocol":"TCP"},{"containerPort":8095,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"cpu":"200m","memory":"500Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"plugin-dir"},{"mountPath":"/var/lib/kubelet/pods","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/var/run/secrets-store-csi-providers","name":"providers-dir"},{"mountPath":"/etc/kubernetes/secrets-store-csi-providers","name":"providers-dir-0"}]},{"args":["--csi-address=/csi/csi.sock","--probe-timeout=3s","--http-endpoint=0.0.0.0:9808","-v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"cpu":"100m","memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"volumeMounts":[{"mountPath":"/csi","name":"plugin-dir"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"aks-secrets-store-csi-driver","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/pods","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"Directory"},"name":"registration-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins/csi-secrets-store/","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"/var/run/secrets-store-csi-providers","type":"DirectoryOrCreate"},"name":"providers-dir"},{"hostPath":{"path":"/etc/kubernetes/secrets-store-csi-providers","type":"DirectoryOrCreate"},"name":"providers-dir-0"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:08Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: secrets-store-csi-driver
      kubernetes.azure.com/managedby: aks
    name: aks-secrets-store-csi-driver
    namespace: kube-system
    resourceVersion: "86055377"
    uid: 099e5f34-644a-4589-a8a9-b1c7d65c5c70
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: secrets-store-csi-driver
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: secrets-store-csi-driver
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --v=2
          - --csi-address=/csi/csi.sock
          - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=/var/lib/kubelet/plugins/csi-secrets-store/csi.sock
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - -v=2
          - --log-format-json=false
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --provider-volume=/var/run/secrets-store-csi-providers
          - --additional-provider-volume-paths=/etc/kubernetes/secrets-store-csi-providers
          - --enable-secret-rotation=true
          - --rotation-poll-interval=2m
          - --metrics-addr=:8095
          - --max-call-recv-msg-size=4194304
          env:
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: secrets-store
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          - containerPort: 8095
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 500Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
          - mountPath: /var/lib/kubelet/pods
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /var/run/secrets-store-csi-providers
            name: providers-dir
          - mountPath: /etc/kubernetes/secrets-store-csi-providers
            name: providers-dir-0
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --http-endpoint=0.0.0.0:9808
          - -v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: plugin-dir
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aks-secrets-store-csi-driver
        serviceAccountName: aks-secrets-store-csi-driver
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/pods
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: Directory
          name: registration-dir
        - hostPath:
            path: /var/lib/kubelet/plugins/csi-secrets-store/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/run/secrets-store-csi-providers
            type: DirectoryOrCreate
          name: providers-dir
        - hostPath:
            path: /etc/kubernetes/secrets-store-csi-providers
            type: DirectoryOrCreate
          name: providers-dir-0
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 3
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"secrets-store-csi-driver","kubernetes.azure.com/managedby":"aks"},"name":"aks-secrets-store-csi-driver-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"secrets-store-csi-driver"}},"template":{"metadata":{"labels":{"app":"secrets-store-csi-driver","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=unix://C:\\csi\\csi.sock","--kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\csi-secrets-store\\csi.sock"],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar.exe","--kubelet-registration-path=C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\csi-secrets-store\\\\csi.sock","--mode=kubelet-registration-probe"]},"initialDelaySeconds":30,"timeoutSeconds":15},"name":"node-driver-registrar","resources":{"limits":{"memory":"200Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"C:\\csi","name":"plugin-dir"},{"mountPath":"C:\\registration","name":"registration-dir"}]},{"args":["-v=2","--log-format-json=false","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--provider-volume=C:\\k\\secrets-store-csi-providers","--enable-secret-rotation=true","--rotation-poll-interval=2m","--metrics-addr=:8095","--max-call-recv-msg-size=4194304"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\csi\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":15,"timeoutSeconds":10},"name":"secrets-store","ports":[{"containerPort":9808,"name":"healthz","protocol":"TCP"},{"containerPort":8095,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"cpu":"400m","memory":"400Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"C:\\csi","name":"plugin-dir"},{"mountPath":"C:\\var\\lib\\kubelet\\pods","name":"mountpoint-dir"},{"mountPath":"C:\\k\\secrets-store-csi-providers","name":"providers-dir"}]},{"args":["--csi-address=unix://C:\\csi\\csi.sock","--probe-timeout=3s","--http-endpoint=0.0.0.0:9808","-v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"cpu":"200m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"100Mi"}},"volumeMounts":[{"mountPath":"C:\\csi","name":"plugin-dir"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"aks-secrets-store-csi-driver","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"C:\\var\\lib\\kubelet\\pods\\","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"C:\\var\\lib\\kubelet\\plugins_registry\\","type":"Directory"},"name":"registration-dir"},{"hostPath":{"path":"C:\\var\\lib\\kubelet\\plugins\\csi-secrets-store\\","type":"DirectoryOrCreate"},"name":"plugin-dir"},{"hostPath":{"path":"C:\\k\\secrets-store-csi-providers","type":"DirectoryOrCreate"},"name":"providers-dir"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:08Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: secrets-store-csi-driver
      kubernetes.azure.com/managedby: aks
    name: aks-secrets-store-csi-driver-windows
    namespace: kube-system
    resourceVersion: "81539916"
    uid: e941fd0e-73c0-4aa8-aac9-8372a94c7fa9
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: secrets-store-csi-driver
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: secrets-store-csi-driver
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --v=2
          - --csi-address=unix://C:\csi\csi.sock
          - --kubelet-registration-path=C:\var\lib\kubelet\plugins\csi-secrets-store\csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar.exe
              - --kubelet-registration-path=C:\\var\\lib\\kubelet\\plugins\\csi-secrets-store\\csi.sock
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 15
          name: node-driver-registrar
          resources:
            limits:
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: C:\registration
            name: registration-dir
        - args:
          - -v=2
          - --log-format-json=false
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --provider-volume=C:\k\secrets-store-csi-providers
          - --enable-secret-rotation=true
          - --rotation-poll-interval=2m
          - --metrics-addr=:8095
          - --max-call-recv-msg-size=4194304
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\csi\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/v2/kubernetes-csi/secrets-store/driver:v1.5.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 10
          name: secrets-store
          ports:
          - containerPort: 9808
            name: healthz
            protocol: TCP
          - containerPort: 8095
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 400m
              memory: 400Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\csi
            name: plugin-dir
          - mountPath: C:\var\lib\kubelet\pods
            name: mountpoint-dir
          - mountPath: C:\k\secrets-store-csi-providers
            name: providers-dir
        - args:
          - --csi-address=unix://C:\csi\csi.sock
          - --probe-timeout=3s
          - --http-endpoint=0.0.0.0:9808
          - -v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.13.1
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              cpu: 200m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 100Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\csi
            name: plugin-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aks-secrets-store-csi-driver
        serviceAccountName: aks-secrets-store-csi-driver
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: C:\var\lib\kubelet\pods\
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: C:\var\lib\kubelet\plugins_registry\
            type: Directory
          name: registration-dir
        - hostPath:
            path: C:\var\lib\kubelet\plugins\csi-secrets-store\
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: C:\k\secrets-store-csi-providers
            type: DirectoryOrCreate
          name: providers-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 3
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"secrets-store-provider-azure","kubernetes.azure.com/managedby":"aks"},"name":"aks-secrets-store-provider-azure","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"secrets-store-provider-azure"}},"template":{"metadata":{"labels":{"app":"secrets-store-provider-azure","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--endpoint=unix:///provider/azure.sock","--log-format-json=false","-v=2","--construct-pem-chain=true","--custom-user-agent='kubernetes.azure.com/managedby: aks'","--healthz-port=8989","--healthz-path=/healthz","--healthz-timeout=5s","--write-cert-and-key-in-separate-files=true"],"image":"mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8989},"initialDelaySeconds":5,"periodSeconds":30,"timeoutSeconds":10},"name":"provider-azure-installer","ports":[{"containerPort":8898,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"100Mi"},"requests":{"cpu":"50m","memory":"100Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsUser":0},"volumeMounts":[{"mountPath":"/provider","name":"provider-vol"}]}],"hostNetwork":true,"nodeSelector":{"kubernetes.io/os":"linux"},"priorityClassName":"system-node-critical","serviceAccountName":"aks-secrets-store-provider-azure","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/run/secrets-store-csi-providers"},"name":"provider-vol"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:08Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: secrets-store-provider-azure
      kubernetes.azure.com/managedby: aks
    name: aks-secrets-store-provider-azure
    namespace: kube-system
    resourceVersion: "86055359"
    uid: e4456f51-6472-402d-b8fb-9e21afdf6a2b
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: secrets-store-provider-azure
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: secrets-store-provider-azure
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --endpoint=unix:///provider/azure.sock
          - --log-format-json=false
          - -v=2
          - --construct-pem-chain=true
          - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
          - --healthz-port=8989
          - --healthz-path=/healthz
          - --healthz-timeout=5s
          - --write-cert-and-key-in-separate-files=true
          image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8989
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: provider-azure-installer
          ports:
          - containerPort: 8898
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 100Mi
            requests:
              cpu: 50m
              memory: 100Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /provider
            name: provider-vol
        dnsPolicy: ClusterFirst
        hostNetwork: true
        nodeSelector:
          kubernetes.io/os: linux
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aks-secrets-store-provider-azure
        serviceAccountName: aks-secrets-store-provider-azure
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/run/secrets-store-csi-providers
            type: ""
          name: provider-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 2
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"secrets-store-provider-azure","kubernetes.azure.com/managedby":"aks"},"name":"aks-secrets-store-provider-azure-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"secrets-store-provider-azure"}},"template":{"metadata":{"labels":{"app":"secrets-store-provider-azure","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--endpoint=unix://C:\\provider\\azure.sock","--log-format-json=false","-v=2","--construct-pem-chain=true","--custom-user-agent='kubernetes.azure.com/managedby: aks'","--healthz-port=8989","--healthz-path=/healthz","--healthz-timeout=5s","--write-cert-and-key-in-separate-files=true"],"image":"mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/healthz","port":8989},"initialDelaySeconds":5,"periodSeconds":30,"timeoutSeconds":10},"name":"provider-azure-installer","ports":[{"containerPort":8898,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"cpu":"100m","memory":"200Mi"},"requests":{"cpu":"100m","memory":"200Mi"}},"volumeMounts":[{"mountPath":"C:\\provider","name":"provider-vol"}]}],"nodeSelector":{"kubernetes.io/os":"windows"},"priorityClassName":"system-node-critical","serviceAccountName":"aks-secrets-store-provider-azure","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"C:\\k\\secrets-store-csi-providers","type":"DirectoryOrCreate"},"name":"provider-vol"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:08Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: secrets-store-provider-azure
      kubernetes.azure.com/managedby: aks
    name: aks-secrets-store-provider-azure-windows
    namespace: kube-system
    resourceVersion: "81539901"
    uid: e989672d-583f-4665-9dfa-ba2c44bf55dc
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: secrets-store-provider-azure
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: secrets-store-provider-azure
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --endpoint=unix://C:\provider\azure.sock
          - --log-format-json=false
          - -v=2
          - --construct-pem-chain=true
          - '--custom-user-agent=''kubernetes.azure.com/managedby: aks'''
          - --healthz-port=8989
          - --healthz-path=/healthz
          - --healthz-timeout=5s
          - --write-cert-and-key-in-separate-files=true
          image: mcr.microsoft.com/oss/v2/azure/secrets-store/provider-azure:v1.7.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 8989
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 10
          name: provider-azure-installer
          ports:
          - containerPort: 8898
            name: metrics
            protocol: TCP
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 100m
              memory: 200Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\provider
            name: provider-vol
        dnsPolicy: ClusterFirst
        nodeSelector:
          kubernetes.io/os: windows
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: aks-secrets-store-provider-azure
        serviceAccountName: aks-secrets-store-provider-azure
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: C:\k\secrets-store-csi-providers
            type: DirectoryOrCreate
          name: provider-vol
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 2
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-03-11T19:31:06Z"
    generation: 4
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 67d08d4d5eff47000106dc55
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs
    namespace: kube-system
    resourceVersion: "87376010"
    uid: a0e96cf1-bc72-4a7e-ac97-e084d8e5caa5
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent
        tier: node
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: azure-mdsd-1.35.1
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: AZMON_CONTAINERLOGS_ONEAGENT_REGIONS
            value: koreacentral,norwayeast,eastus2
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: SYSLOG_HOST_PORT
            value: "28330"
          - name: AZMON_RETINA_FLOW_LOGS_ENABLED
            value: "false"
          - name: AZMON_RESOURCE_OPTIMIZATION_ENABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 28330
            hostPort: 28330
            name: syslog
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 75m
              memory: 325Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /hostfs
            mountPropagation: HostToContainer
            name: host-root
            readOnly: true
          - mountPath: /var/log
            name: host-log
          - mountPath: /var/run/mdsd-ci
            name: mdsd-sock
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
          - mountPath: /var/lib/docker/containers
            name: containerlog-path
            readOnly: true
          - mountPath: /mnt/docker
            name: containerlog-path-2
            readOnly: true
          - mountPath: /mnt/containers
            name: containerlog-path-3
            readOnly: true
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-prometheus
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: CONTAINER_TYPE
            value: PrometheusSidecar
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: SYSLOG_HOST_PORT
            value: "28330"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-prometheus
          resources:
            limits:
              cpu: 500m
              memory: 1Gi
            requests:
              cpu: 75m
              memory: 225Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
          - mountPath: /var/run/mdsd-PrometheusSidecar
            name: mdsd-prometheus-sock
          - mountPath: /var/run/mdsd-ci
            name: mdsd-sock
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /
            type: ""
          name: host-root
        - emptyDir: {}
          name: mdsd-prometheus-sock
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /var/run/mdsd-ci
            type: ""
          name: mdsd-sock
        - hostPath:
            path: /var/lib/docker/containers
            type: ""
          name: containerlog-path
        - hostPath:
            path: /mnt/docker
            type: ""
          name: containerlog-path-2
        - hostPath:
            path: /mnt/containers
            type: ""
          name: containerlog-path-3
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 4
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-03-11T19:31:06Z"
    generation: 4
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent-windows
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 67d08d4d5eff47000106dc55
      kubernetes.azure.com/managedby: aks
      tier: node-win
    name: ama-logs-windows
    namespace: kube-system
    resourceVersion: "82396576"
    uid: cfc6a359-dc1c-402e-9b74-0930cc2b0189
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: ama-logs-agent-windows
        tier: node-win
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: 46.17.2
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          component: ama-logs-agent-windows
          kubernetes.azure.com/managedby: aks
          tier: node-win
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: FBIT_SERVICE_FLUSH_INTERVAL
            value: "15"
          - name: FBIT_TAIL_BUFFER_CHUNK_SIZE
            value: "1"
          - name: FBIT_TAIL_BUFFER_MAX_SIZE
            value: "1"
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: DaemonSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: PODNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs-windows
                divisor: "0"
                resource: limits.memory
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:win-3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - cmd
              - /c
              - C:\opt\amalogswindows\scripts\cmd\livenessprobe.exe
              - fluent-bit.exe
              - fluentdwinaks
              - C:\etc\amalogswindows\filesystemwatcher.txt
              - C:\etc\amalogswindows\renewcertificate.txt
            failureThreshold: 3
            initialDelaySeconds: 180
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs-windows
          resources:
            limits:
              cpu: "2"
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 150Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: C:\ProgramData\docker\containers
            name: docker-windows-containers
            readOnly: true
          - mountPath: C:\var
            name: docker-windows-kuberenetes-container-logs
          - mountPath: C:\etc\config\settings
            name: settings-vol-config
            readOnly: true
          - mountPath: C:\etc\ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: C:\etc\config\adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: C:\etc\kubernetes\host
            name: azure-json-path
            readOnly: true
        dnsConfig:
          options:
          - name: ndots
            value: "3"
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        - effect: PreferNoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: C:\var
            type: ""
          name: docker-windows-kuberenetes-container-logs
        - hostPath:
            path: C:\k
            type: ""
          name: azure-json-path
        - hostPath:
            path: C:\ProgramData\docker\containers
            type: DirectoryOrCreate
          name: docker-windows-containers
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 50%
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","tier":"node"},"name":"azure-ip-masq-agent","namespace":"kube-system"},"spec":{"minReadySeconds":60,"selector":{"matchLabels":{"k8s-app":"azure-ip-masq-agent","tier":"node"}},"template":{"metadata":{"labels":{"k8s-app":"azure-ip-masq-agent","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"automountServiceAccountToken":false,"containers":[{"args":["--v=2","--resync-interval=60"],"image":"mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2","imagePullPolicy":"IfNotPresent","name":"azure-ip-masq-agent","resources":{"limits":{"cpu":"500m","memory":"250Mi"},"requests":{"cpu":"100m","memory":"50Mi"}},"securityContext":{"capabilities":{"add":["NET_ADMIN","NET_RAW"],"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/etc/config","name":"azure-ip-masq-agent-config-volume"},{"mountPath":"/run/xtables.lock","name":"iptableslock"}]}],"hostNetwork":true,"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"name":"azure-ip-masq-agent-config-volume","projected":{"sources":[{"configMap":{"items":[{"key":"ip-masq-agent","mode":444,"path":"ip-masq-agent"}],"name":"azure-ip-masq-agent-config","optional":true}},{"configMap":{"items":[{"key":"ip-masq-agent-reconciled","mode":444,"path":"ip-masq-agent-reconciled"}],"name":"azure-ip-masq-agent-config-reconciled","optional":true}}]}},{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":"25%"},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 2
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: azure-ip-masq-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      tier: node
    name: azure-ip-masq-agent
    namespace: kube-system
    resourceVersion: "86055350"
    uid: dade17de-8dfe-488c-9313-479011d31c2b
  spec:
    minReadySeconds: 60
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: azure-ip-masq-agent
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: azure-ip-masq-agent
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        automountServiceAccountToken: false
        containers:
        - args:
          - --v=2
          - --resync-interval=60
          image: mcr.microsoft.com/oss/v2/azure/ip-masq-agent-v2:v0.1.15-2
          imagePullPolicy: IfNotPresent
          name: azure-ip-masq-agent
          resources:
            limits:
              cpu: 500m
              memory: 250Mi
            requests:
              cpu: 100m
              memory: 50Mi
          securityContext:
            capabilities:
              add:
              - NET_ADMIN
              - NET_RAW
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: azure-ip-masq-agent-config-volume
          - mountPath: /run/xtables.lock
            name: iptableslock
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - name: azure-ip-masq-agent-config-volume
          projected:
            defaultMode: 420
            sources:
            - configMap:
                items:
                - key: ip-masq-agent
                  mode: 444
                  path: ip-masq-agent
                name: azure-ip-masq-agent-config
                optional: true
            - configMap:
                items:
                - key: ip-masq-agent-reconciled
                  mode: 444
                  path: ip-masq-agent-reconciled
                name: azure-ip-masq-agent-config-reconciled
                optional: true
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 25%
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 2
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "3"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["cloud-node-manager","--node-name=$(NODE_NAME)","--wait-routes","--enable-deprecated-beta-topology-labels=true"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 3
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager
    namespace: kube-system
    resourceVersion: "86055354"
    uid: 85edf1bc-e39e-40fd-8a50-b9393c886cac
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - cloud-node-manager
          - --node-name=$(NODE_NAME)
          - --wait-routes
          - --enable-deprecated-beta-topology-labels=true
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 3
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"cloud-node-manager","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"cloud-node-manager-windows","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"cloud-node-manager-windows"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"cloud-node-manager-windows","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"command":["c:\\hpc\\cloud-node-manager.exe","--node-name=$(NODE_NAME)"],"env":[{"name":"NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12-windows-hpc","imagePullPolicy":"IfNotPresent","name":"cloud-node-manager","resources":{"limits":{"memory":"512Mi"},"requests":{"cpu":"50m","memory":"50Mi"}}}],"hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"cloud-node-manager","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: cloud-node-manager
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: cloud-node-manager-windows
    namespace: kube-system
    resourceVersion: "58805570"
    uid: 9c4b5c47-2010-4f44-807c-12dabbe37b52
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: cloud-node-manager-windows
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: cloud-node-manager-windows
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - command:
          - c:\hpc\cloud-node-manager.exe
          - --node-name=$(NODE_NAME)
          env:
          - name: NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes/azure-cloud-node-manager:v1.30.12-windows-hpc
          imagePullPolicy: IfNotPresent
          name: cloud-node-manager
          resources:
            limits:
              memory: 512Mi
            requests:
              cpu: 50m
              memory: 50Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: cloud-node-manager
        serviceAccountName: cloud-node-manager
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29603","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-perf-optimization=true"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azuredisk","ports":[{"containerPort":29603,"name":"healthz","protocol":"TCP"}],"resources":{"limits":{"memory":"5600Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"},{"mountPath":"/sys/bus/scsi/devices","name":"sys-devices-dir"},{"mountPath":"/sys/class/scsi_host/","name":"scsi-host-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/disk.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"},{"hostPath":{"path":"/sys/bus/scsi/devices","type":"Directory"},"name":"sys-devices-dir"},{"hostPath":{"path":"/sys/class/scsi_host/","type":"Directory"},"name":"scsi-host-dir"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node
    namespace: kube-system
    resourceVersion: "86055373"
    uid: e375dc35-c057-4cd1-9196-a96a2c0ccfda
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29603
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/disk.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-perf-optimization=true
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azuredisk
          ports:
          - containerPort: 29603
            name: healthz
            protocol: TCP
          resources:
            limits:
              memory: 5600Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
          - mountPath: /sys/bus/scsi/devices
            name: sys-devices-dir
          - mountPath: /sys/class/scsi_host/
            name: scsi-host-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/disk.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /sys/bus/scsi/devices
            type: Directory
          name: sys-devices-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 5
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "5"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azuredisk-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azuredisk-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azuredisk-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--v=2","--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true"],"command":["azurediskplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\disk.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12-windows-hp","imagePullPolicy":"IfNotPresent","name":"azuredisk","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azuredisk-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 5
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azuredisk-node-win
    namespace: kube-system
    resourceVersion: "58805680"
    uid: edf887d2-887c-4f3a-9b2f-fb593ab66879
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azuredisk-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azuredisk-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --v=2
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          command:
          - azurediskplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\disk.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12-windows-hp
          imagePullPolicy: IfNotPresent
          name: azuredisk
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\disk.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azuredisk-csi:v1.30.12-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azuredisk-node-sa
        serviceAccountName: csi-azuredisk-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 5
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"args":["--csi-address=/csi/csi.sock","--probe-timeout=10s","--health-port=29613","--v=2"],"image":"mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0","imagePullPolicy":"IfNotPresent","name":"liveness-probe","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"}]},{"args":["--csi-address=$(ADDRESS)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--v=2"],"env":[{"name":"ADDRESS","value":"/csi/csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"/var/lib/kubelet/plugins/file.csi.azure.com/csi.sock"}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","livenessProbe":{"exec":{"command":["/csi-node-driver-registrar","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--mode=kubelet-registration-probe"]},"initialDelaySeconds":60,"timeoutSeconds":30},"name":"node-driver-registrar","resources":{"limits":{"memory":"100Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/registration","name":"registration-dir"}]},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-get-volume-stats=true","--mount-permissions=0777","--metrics-address=0.0.0.0:29615"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"/etc/kubernetes/azure.json"},{"name":"CSI_ENDPOINT","value":"unix:///csi/csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/healthz","port":"healthz"},"initialDelaySeconds":30,"periodSeconds":30,"timeoutSeconds":30},"name":"azurefile","ports":[{"containerPort":29613,"name":"healthz","protocol":"TCP"},{"containerPort":29615,"name":"metrics","protocol":"TCP"}],"resources":{"limits":{"memory":"400Mi"},"requests":{"cpu":"10m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]},"privileged":true},"volumeMounts":[{"mountPath":"/csi","name":"socket-dir"},{"mountPath":"/var/lib/kubelet/","mountPropagation":"Bidirectional","name":"mountpoint-dir"},{"mountPath":"/etc/kubernetes/","name":"azure-cred"},{"mountPath":"/dev","name":"device-dir"}]}],"dnsPolicy":"Default","hostNetwork":true,"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/var/lib/kubelet/plugins/file.csi.azure.com","type":"DirectoryOrCreate"},"name":"socket-dir"},{"hostPath":{"path":"/var/lib/kubelet/","type":"DirectoryOrCreate"},"name":"mountpoint-dir"},{"hostPath":{"path":"/var/lib/kubelet/plugins_registry/","type":"DirectoryOrCreate"},"name":"registration-dir"},{"hostPath":{"path":"/etc/kubernetes/","type":"DirectoryOrCreate"},"name":"azure-cred"},{"hostPath":{"path":"/dev","type":"Directory"},"name":"device-dir"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node
    namespace: kube-system
    resourceVersion: "86055363"
    uid: 897dc8a9-5c67-4033-a1ea-ff860eb27a74
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=10s
          - --health-port=29613
          - --v=2
          image: mcr.microsoft.com/oss/kubernetes-csi/livenessprobe:v2.15.0
          imagePullPolicy: IfNotPresent
          name: liveness-probe
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
        - args:
          - --csi-address=$(ADDRESS)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --v=2
          env:
          - name: ADDRESS
            value: /csi/csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: /var/lib/kubelet/plugins/file.csi.azure.com/csi.sock
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
              - --mode=kubelet-registration-probe
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 30
          name: node-driver-registrar
          resources:
            limits:
              memory: 100Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /registration
            name: registration-dir
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-get-volume-stats=true
          - --mount-permissions=0777
          - --metrics-address=0.0.0.0:29615
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: /etc/kubernetes/azure.json
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /healthz
              port: healthz
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 30
          name: azurefile
          ports:
          - containerPort: 29613
            name: healthz
            protocol: TCP
          - containerPort: 29615
            name: metrics
            protocol: TCP
          resources:
            limits:
              memory: 400Mi
            requests:
              cpu: 10m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /csi
            name: socket-dir
          - mountPath: /var/lib/kubelet/
            mountPropagation: Bidirectional
            name: mountpoint-dir
          - mountPath: /etc/kubernetes/
            name: azure-cred
          - mountPath: /dev
            name: device-dir
        dnsPolicy: Default
        hostNetwork: true
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/file.csi.azure.com
            type: DirectoryOrCreate
          name: socket-dir
        - hostPath:
            path: /var/lib/kubelet/
            type: DirectoryOrCreate
          name: mountpoint-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry/
            type: DirectoryOrCreate
          name: registration-dir
        - hostPath:
            path: /etc/kubernetes/
            type: DirectoryOrCreate
          name: azure-cred
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 4
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"csi-azurefile-node-win","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"app":"csi-azurefile-node-win"}},"template":{"metadata":{"labels":{"app":"csi-azurefile-node-win","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"args":["--csi-address=$(CSI_ENDPOINT)","--kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)","--plugin-registration-path=$(PLUGIN_REG_DIR)","--v=2"],"command":["csi-node-driver-registrar.exe"],"env":[{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"DRIVER_REG_SOCK_PATH","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"PLUGIN_REG_DIR","value":"C:\\\\var\\\\lib\\\\kubelet\\\\plugins_registry\\\\"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0","imagePullPolicy":"IfNotPresent","name":"node-driver-registrar","resources":{"limits":{"memory":"150Mi"},"requests":{"cpu":"40m","memory":"40Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}},{"args":["--v=5","--endpoint=$(CSI_ENDPOINT)","--nodeid=$(KUBE_NODE_NAME)","--enable-windows-host-process=true","--remove-smb-mount-on-windows=false"],"command":["azurefileplugin.exe"],"env":[{"name":"AZURE_CREDENTIAL_FILE","value":"C:\\k\\azure.json"},{"name":"CSI_ENDPOINT","value":"unix://C:\\\\var\\\\lib\\\\kubelet\\\\plugins\\\\file.csi.azure.com\\\\csi.sock"},{"name":"KUBE_NODE_NAME","valueFrom":{"fieldRef":{"apiVersion":"v1","fieldPath":"spec.nodeName"}}}],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10-windows-hp","imagePullPolicy":"IfNotPresent","name":"azurefile","securityContext":{"capabilities":{"drop":["ALL"]}}}],"hostNetwork":true,"initContainers":[{"command":["powershell.exe","-c","New-Item -ItemType Directory -Path C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\ -Force"],"image":"mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10-windows-hp","imagePullPolicy":"IfNotPresent","name":"init","securityContext":{"capabilities":{"drop":["ALL"]}}}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"},"windowsOptions":{"hostProcess":true,"runAsUserName":"NT AUTHORITY\\SYSTEM"}},"serviceAccountName":"csi-azurefile-node-sa","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: csi-azurefile-node-win
    namespace: kube-system
    resourceVersion: "81539769"
    uid: e2c61f24-bce1-4ea0-b209-5e189c7b8118
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        app: csi-azurefile-node-win
    template:
      metadata:
        creationTimestamp: null
        labels:
          app: csi-azurefile-node-win
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - args:
          - --csi-address=$(CSI_ENDPOINT)
          - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
          - --plugin-registration-path=$(PLUGIN_REG_DIR)
          - --v=2
          command:
          - csi-node-driver-registrar.exe
          env:
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: DRIVER_REG_SOCK_PATH
            value: C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: PLUGIN_REG_DIR
            value: C:\\var\\lib\\kubelet\\plugins_registry\\
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/csi-node-driver-registrar:v2.13.0
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources:
            limits:
              memory: 150Mi
            requests:
              cpu: 40m
              memory: 40Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - args:
          - --v=5
          - --endpoint=$(CSI_ENDPOINT)
          - --nodeid=$(KUBE_NODE_NAME)
          - --enable-windows-host-process=true
          - --remove-smb-mount-on-windows=false
          command:
          - azurefileplugin.exe
          env:
          - name: AZURE_CREDENTIAL_FILE
            value: C:\k\azure.json
          - name: CSI_ENDPOINT
            value: unix://C:\\var\\lib\\kubelet\\plugins\\file.csi.azure.com\\csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10-windows-hp
          imagePullPolicy: IfNotPresent
          name: azurefile
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - powershell.exe
          - -c
          - New-Item -ItemType Directory -Path C:\var\lib\kubelet\plugins\file.csi.azure.com\
            -Force
          image: mcr.microsoft.com/oss/kubernetes-csi/azurefile-csi:v1.30.10-windows-hp
          imagePullPolicy: IfNotPresent
          name: init
          resources: {}
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
          windowsOptions:
            hostProcess: true
            runAsUserName: NT AUTHORITY\SYSTEM
        serviceAccount: csi-azurefile-node-sa
        serviceAccountName: csi-azurefile-node-sa
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 4
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"},"name":"kube-proxy","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"component":"kube-proxy","tier":"node"}},"template":{"metadata":{"annotations":null,"labels":{"component":"kube-proxy","kubernetes.azure.com/managedby":"aks","tier":"node"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["kube-proxy","--conntrack-max-per-core=0","--metrics-bind-address=0.0.0.0:10249","--cluster-cidr=10.244.0.0/16","--detect-local-mode=ClusterCIDR","--pod-interface-name-prefix=","--v=3"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7","imagePullPolicy":"IfNotPresent","name":"kube-proxy","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/run/xtables.lock","name":"iptableslock"},{"mountPath":"/lib/modules","name":"modules"}]}],"hostNetwork":true,"initContainers":[{"command":["/bin/sh","-c","get_num_cpu() {\n  # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: \"0-3\", \"0,1,2\", \"0-3,4\")\n  # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html\n  sys_cpu_online=$(cat /sys/devices/system/cpu/online)\n  result=0\n  OLD_IFS=\"$IFS\"; IFS=\",\"\n  for rng in \"$sys_cpu_online\"; do\n    if echo \"$rng\" | grep -q -- \"-\"; then\n      min=${rng%-*}; max=${rng#*-}\n      if [ \"$min\" -le \"$max\" ]; then\n        result=$((result + (max - min + 1)))\n      fi\n    else\n      result=$((result + 1))\n    fi\n  done\n  IFS=\"$OLD_IFS\"\n  echo $result\n}\n\nSYSCTL=/proc/sys/net/netfilter/nf_conntrack_max\necho \"Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)\"\nDESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?\u003c=net.netfilter.nf_conntrack_max=).*')\nif [ -z \"$DESIRED\" ]; then\n  NUM_CPU=$(get_num_cpu)\n  DESIRED=$((32768*$NUM_CPU))\n  if [ $DESIRED -lt 131072 ]; then\n    DESIRED=131072\n  fi\n\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max not set.\"\n  echo \"Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072).\"\n  echo $DESIRED \u003e $SYSCTL\nelse\n  echo \"AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED.\"\n  echo \"Setting nf_conntrack_max to $DESIRED.\"\n  echo $DESIRED \u003e $SYSCTL\nfi\n"],"image":"mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7","imagePullPolicy":"IfNotPresent","name":"kube-proxy-bootstrap","resources":{"requests":{"cpu":"100m"}},"securityContext":{"privileged":true},"volumeMounts":[{"mountPath":"/etc/sysctl.d","name":"sysctls"},{"mountPath":"/lib/modules","name":"modules"}]}],"priorityClassName":"system-node-critical","serviceAccountName":"kube-proxy","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/run/xtables.lock","type":"FileOrCreate"},"name":"iptableslock"},{"hostPath":{"path":"/etc/sysctl.d","type":"Directory"},"name":"sysctls"},{"hostPath":{"path":"/lib/modules","type":"Directory"},"name":"modules"}]}},"updateStrategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"}}}
    creationTimestamp: "2025-03-11T19:24:08Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      component: kube-proxy
      kubernetes.azure.com/managedby: aks
      tier: node
    name: kube-proxy
    namespace: kube-system
    resourceVersion: "86055381"
    uid: 1b2b9d92-486f-4dd5-be4d-b5658ea17eed
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        component: kube-proxy
        tier: node
    template:
      metadata:
        creationTimestamp: null
        labels:
          component: kube-proxy
          kubernetes.azure.com/managedby: aks
          tier: node
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - kube-proxy
          - --conntrack-max-per-core=0
          - --metrics-bind-address=0.0.0.0:10249
          - --cluster-cidr=10.244.0.0/16
          - --detect-local-mode=ClusterCIDR
          - --pod-interface-name-prefix=
          - --v=3
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
          imagePullPolicy: IfNotPresent
          name: kube-proxy
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /run/xtables.lock
            name: iptableslock
          - mountPath: /lib/modules
            name: modules
        dnsPolicy: ClusterFirst
        hostNetwork: true
        initContainers:
        - command:
          - /bin/sh
          - -c
          - |
            get_num_cpu() {
              # format is comma-separated list of CPU IDs or ranges of CPU IDs (examples: "0-3", "0,1,2", "0-3,4")
              # see https://www.kernel.org/doc/html/latest/admin-guide/cputopology.html
              sys_cpu_online=$(cat /sys/devices/system/cpu/online)
              result=0
              OLD_IFS="$IFS"; IFS=","
              for rng in "$sys_cpu_online"; do
                if echo "$rng" | grep -q -- "-"; then
                  min=${rng%-*}; max=${rng#*-}
                  if [ "$min" -le "$max" ]; then
                    result=$((result + (max - min + 1)))
                  fi
                else
                  result=$((result + 1))
                fi
              done
              IFS="$OLD_IFS"
              echo $result
            }

            SYSCTL=/proc/sys/net/netfilter/nf_conntrack_max
            echo "Current net.netfilter.nf_conntrack_max: $(cat $SYSCTL)"
            DESIRED=$(grep -m 1 'net.netfilter.nf_conntrack_max' /etc/sysctl.d/999-sysctl-aks.conf | grep -oP '(?<=net.netfilter.nf_conntrack_max=).*')
            if [ -z "$DESIRED" ]; then
              NUM_CPU=$(get_num_cpu)
              DESIRED=$((32768*$NUM_CPU))
              if [ $DESIRED -lt 131072 ]; then
                DESIRED=131072
              fi

              echo "AKS custom config for net.netfilter.nf_conntrack_max not set."
              echo "Setting nf_conntrack_max to $DESIRED (32768 * $NUM_CPU cores, minimum 131072)."
              echo $DESIRED > $SYSCTL
            else
              echo "AKS custom config for net.netfilter.nf_conntrack_max set to $DESIRED."
              echo "Setting nf_conntrack_max to $DESIRED."
              echo $DESIRED > $SYSCTL
            fi
          image: mcr.microsoft.com/oss/kubernetes/kube-proxy:v1.30.7
          imagePullPolicy: IfNotPresent
          name: kube-proxy-bootstrap
          resources:
            requests:
              cpu: 100m
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/sysctl.d
            name: sysctls
          - mountPath: /lib/modules
            name: modules
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: kube-proxy
        serviceAccountName: kube-proxy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
        volumes:
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: iptableslock
        - hostPath:
            path: /etc/sysctl.d
            type: Directory
          name: sysctls
        - hostPath:
            path: /lib/modules
            type: Directory
          name: modules
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 8
    desiredNumberScheduled: 8
    numberAvailable: 8
    numberMisscheduled: 0
    numberReady: 8
    observedGeneration: 1
    updatedNumberScheduled: 8
- apiVersion: apps/v1
  kind: DaemonSet
  metadata:
    annotations:
      deprecated.daemonset.template.generation: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"DaemonSet","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"windows-kube-proxy-initializer","namespace":"kube-system"},"spec":{"selector":{"matchLabels":{"k8s-app":"windows-kube-proxy-initializer"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/daemonset-pod":"true"},"labels":{"k8s-app":"windows-kube-proxy-initializer","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["windows"]}]}]}}},"containers":[{"image":"mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808","imagePullPolicy":"IfNotPresent","name":"pause"}],"priorityClassName":"system-node-critical","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoSchedule","key":"node-role.kubernetes.io/master","operator":"Equal","value":"true"},{"effect":"NoExecute","operator":"Exists"},{"effect":"NoSchedule","operator":"Exists"}]}}}}
    creationTimestamp: "2025-04-08T23:13:24Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: windows-kube-proxy-initializer
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: windows-kube-proxy-initializer
    namespace: kube-system
    resourceVersion: "14024687"
    uid: e1b9e07b-673b-4179-9bae-0f53c8d55d97
  spec:
    revisionHistoryLimit: 10
    selector:
      matchLabels:
        k8s-app: windows-kube-proxy-initializer
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/daemonset-pod: "true"
        creationTimestamp: null
        labels:
          k8s-app: windows-kube-proxy-initializer
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - windows
        containers:
        - image: mcr.microsoft.com/oss/kubernetes/pause:3.9-hotfix-20230808
          imagePullPolicy: IfNotPresent
          name: pause
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
          operator: Equal
          value: "true"
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
    updateStrategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
  status:
    currentNumberScheduled: 0
    desiredNumberScheduled: 0
    numberMisscheduled: 0
    numberReady: 0
    observedGeneration: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-03-11T19:31:06Z"
    generation: 4
    labels:
      app.kubernetes.io/managed-by: Helm
      component: ama-logs-agent
      helm.toolkit.fluxcd.io/name: azure-monitor-logs-adapter-helmrelease
      helm.toolkit.fluxcd.io/namespace: 67d08d4d5eff47000106dc55
      kubernetes.azure.com/managedby: aks
      tier: node
    name: ama-logs-rs
    namespace: kube-system
    resourceVersion: "87319757"
    uid: 54c22c9b-8902-44cf-a089-e9fabeb6a081
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        rsName: ama-logs-rs
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: azure-mdsd-1.35.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-11T19:31:06Z"
      lastUpdateTime: "2025-06-26T23:06:08Z"
      message: ReplicaSet "ama-logs-rs-765b4599fb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-07-02T15:52:31Z"
      lastUpdateTime: "2025-07-02T15:52:31Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "11"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"azure-policy","kubernetes.azure.com/managedby":"aks"},"name":"azure-policy","namespace":"kube-system"},"spec":{"paused":false,"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"azure-policy"}},"template":{"metadata":{"annotations":{"aks.component/sig":"azure-policy","cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"labels":{"app":"azure-policy","kubernetes.azure.com/managedby":"aks"},"name":"azure-policy"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["azure-policy"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"env":[{"name":"K8S_POLICY_PREFIX","value":"azurepolicy"},{"name":"RESOURCE_ID","value":"/subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01"},{"name":"RESOURCE_TYPE","value":"Microsoft.ContainerService/managedClusters"},{"name":"DATAPLANE_ENDPOINT","value":"https://data.policy.core.windows.net"},{"name":"ACS_CREDENTIAL_LOCATION","value":"/etc/acs/azure.json"},{"name":"REFRESH_INTERVAL","value":"15m"},{"name":"AUDIT_INTERVAL","value":"15m"},{"name":"TELEMETRY_HEARTBEAT_INTERVAL","value":"15m"},{"name":"MUTATION_ENABLED","value":"true"},{"name":"EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT","value":"false"},{"name":"USER_ASSIGNED_IDENTITY","value":"f1a021b2-9902-4560-820a-f4139f4ffe90"},{"name":"CURRENT_IMAGE","value":"mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2"},{"name":"FULL_SCAN_EXCLUSION_LIST","value":"kube-system,gatekeeper-system"},{"name":"WEBHOOK_EXCLUSION_LIST","value":"kube-system,gatekeeper-system"},{"name":"GATEKEEPER_NAMESPACE","value":"gatekeeper-system"},{"name":"POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"DATA_BOUNDARY","value":"Global"}],"image":"mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":9090},"initialDelaySeconds":5},"name":"azure-policy","ports":[{"containerPort":9090,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":9090},"initialDelaySeconds":5},"resources":{"limits":{"cpu":"100m","memory":"200Mi"},"requests":{"cpu":"30m","memory":"50Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsUser":0,"seccompProfile":{"type":"RuntimeDefault"}},"volumeMounts":[{"mountPath":"/etc/acs/azure.json","name":"acs-credential","readOnly":true},{"mountPath":"/etc/ssl/certs","name":"ca-certs","readOnly":true},{"mountPath":"/etc/pki/ca-trust/extracted","name":"etc-pki-ca-certs","readOnly":true}]}],"priorityClassName":"system-node-critical","serviceAccountName":"azure-policy","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}],"volumes":[{"hostPath":{"path":"/etc/kubernetes/azure.json","type":"File"},"name":"acs-credential"},{"hostPath":{"path":"/etc/ssl/certs","type":"Directory"},"name":"ca-certs"},{"hostPath":{"path":"/etc/pki/ca-trust/extracted","type":"DirectoryOrCreate"},"name":"etc-pki-ca-certs"}]}}}}
    creationTimestamp: "2025-03-11T19:24:11Z"
    generation: 11
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: azure-policy
      kubernetes.azure.com/managedby: aks
    name: azure-policy
    namespace: kube-system
    resourceVersion: "81540470"
    uid: 4298cff0-195f-42e0-99d2-3f9c3de25e05
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: azure-policy
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy
          kubernetes.azure.com/managedby: aks
        name: azure-policy
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: K8S_POLICY_PREFIX
            value: azurepolicy
          - name: RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: RESOURCE_TYPE
            value: Microsoft.ContainerService/managedClusters
          - name: DATAPLANE_ENDPOINT
            value: https://data.policy.core.windows.net
          - name: ACS_CREDENTIAL_LOCATION
            value: /etc/acs/azure.json
          - name: REFRESH_INTERVAL
            value: 15m
          - name: AUDIT_INTERVAL
            value: 15m
          - name: TELEMETRY_HEARTBEAT_INTERVAL
            value: 15m
          - name: MUTATION_ENABLED
            value: "true"
          - name: EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT
            value: "false"
          - name: USER_ASSIGNED_IDENTITY
            value: f1a021b2-9902-4560-820a-f4139f4ffe90
          - name: CURRENT_IMAGE
            value: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
          - name: FULL_SCAN_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: WEBHOOK_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: GATEKEEPER_NAMESPACE
            value: gatekeeper-system
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: DATA_BOUNDARY
            value: Global
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/acs/azure.json
            name: acs-credential
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ca-certs
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted
            name: etc-pki-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy
        serviceAccountName: azure-policy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/azure.json
            type: File
          name: acs-credential
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ca-certs
        - hostPath:
            path: /etc/pki/ca-trust/extracted
            type: DirectoryOrCreate
          name: etc-pki-ca-certs
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-13T00:40:49Z"
      lastUpdateTime: "2025-06-13T00:40:49Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-11T19:24:11Z"
      lastUpdateTime: "2025-06-25T23:16:44Z"
      message: ReplicaSet "azure-policy-5bdd784c47" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 11
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "4"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"azure-policy-webhook","kubernetes.azure.com/managedby":"aks"},"name":"azure-policy-webhook","namespace":"kube-system"},"spec":{"paused":false,"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"azure-policy-webhook"}},"template":{"metadata":{"annotations":{"aks.component/sig":"azure-policy","checksum/ca-cert":"a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5","checksum/tls-cert":"a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db","cluster-autoscaler.kubernetes.io/safe-to-evict":"true"},"labels":{"app":"azure-policy-webhook","kubernetes.azure.com/managedby":"aks"},"name":"azure-policy-webhook"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["azure-policy-webhook"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":100}]}},"containers":[{"args":["--port=9449","--generate-certs=false"],"env":[{"name":"POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}},{"name":"WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES","value":"aksService,aksDeploymentSafeguards"}],"image":"mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.2","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/healthz","port":9090}},"name":"azure-policy-webhook","ports":[{"containerPort":9090,"name":"healthz","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/readyz","port":9090}},"resources":{"limits":{"cpu":"100m","memory":"200Mi"},"requests":{"cpu":"30m","memory":"50Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsGroup":999,"runAsNonRoot":true,"runAsUser":1000,"seccompProfile":{"type":"RuntimeDefault"}}}],"priorityClassName":"system-node-critical","serviceAccountName":"azure-policy-webhook-account","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"}]}}}}
    creationTimestamp: "2025-03-11T19:24:11Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: azure-policy-webhook
      kubernetes.azure.com/managedby: aks
    name: azure-policy-webhook
    namespace: kube-system
    resourceVersion: "81540293"
    uid: 58a45e5b-03b9-4c0a-af04-73be68d9c900
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: azure-policy-webhook
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          checksum/ca-cert: a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5
          checksum/tls-cert: a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy-webhook
          kubernetes.azure.com/managedby: aks
        name: azure-policy-webhook
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --port=9449
          - --generate-certs=false
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES
            value: aksService,aksDeploymentSafeguards
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy-webhook
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy-webhook-account
        serviceAccountName: azure-policy-webhook-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-06-13T00:40:47Z"
      lastUpdateTime: "2025-06-13T00:40:47Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-11T19:24:11Z"
      lastUpdateTime: "2025-06-25T23:16:38Z"
      message: ReplicaSet "azure-policy-webhook-74dc77d8c5" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 4
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","kubernetes.io/name":"CoreDNS","version":"v20"},"name":"coredns","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"kube-dns","version":"v20"}},"strategy":{"rollingUpdate":{"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"prometheus.io/port":"9153"},"labels":{"k8s-app":"kube-dns","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true","version":"v20"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["kube-dns"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"args":["-conf","/etc/coredns/Corefile"],"env":[{"name":"GOMAXPROCS","valueFrom":{"resourceFieldRef":{"resource":"limits.cpu"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":5,"httpGet":{"path":"/health","port":8080,"scheme":"HTTP"},"initialDelaySeconds":60,"successThreshold":1,"timeoutSeconds":5},"name":"coredns","ports":[{"containerPort":53,"name":"dns","protocol":"UDP"},{"containerPort":53,"name":"dns-tcp","protocol":"TCP"},{"containerPort":9153,"name":"metrics","protocol":"TCP"}],"readinessProbe":{"httpGet":{"path":"/ready","port":8181,"scheme":"HTTP"}},"resources":{"limits":{"cpu":3,"memory":"500Mi"},"requests":{"cpu":"100m","memory":"70Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"add":["NET_BIND_SERVICE"],"drop":["ALL"]},"procMount":"Default","readOnlyRootFilesystem":true},"volumeMounts":[{"mountPath":"/etc/coredns","name":"config-volume","readOnly":true},{"mountPath":"/etc/coredns/custom","name":"custom-config-volume","readOnly":true},{"mountPath":"/tmp","name":"tmp"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns","tolerations":[{"effect":"NoSchedule","key":"node-role.kubernetes.io/master"},{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"configMap":{"items":[{"key":"Corefile","path":"Corefile"}],"name":"coredns"},"name":"config-volume"},{"configMap":{"name":"coredns-custom","optional":true},"name":"custom-config-volume"},{"emptyDir":{},"name":"tmp"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 48
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      kubernetes.io/name: CoreDNS
      version: v20
    name: coredns
    namespace: kube-system
    resourceVersion: "81540183"
    uid: e5de82de-21a3-490c-9f57-2166e12d13c7
  spec:
    progressDeadlineSeconds: 600
    replicas: 3
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: kube-dns
        version: v20
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 3
    conditions:
    - lastTransitionTime: "2025-06-13T00:40:46Z"
      lastUpdateTime: "2025-06-13T00:40:46Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-11T19:24:07Z"
      lastUpdateTime: "2025-06-25T23:16:34Z"
      message: ReplicaSet "coredns-dbb879dfd" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 48
    readyReplicas: 3
    replicas: 3
    updatedReplicas: 3
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"coredns-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"coredns-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"k8s-app":"coredns-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=coredns-autoscaler","--target=deployment/coredns","--default-params={\"ladder\":{\"coresToReplicas\":[[1,2],[512,3],[1024,4],[2048,5]],\"nodesToReplicas\":[[1,2],[8,3],[16,4],[32,5]]}}","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"200m","memory":"1G"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"coredns-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: coredns-autoscaler
    namespace: kube-system
    resourceVersion: "70015641"
    uid: 9865b0a4-7c40-4726-b3b6-a27e7f648ddb
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 1G
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-03-11T19:24:07Z"
      lastUpdateTime: "2025-03-11T19:27:46Z"
      message: ReplicaSet "coredns-autoscaler-5955d6bbdb" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-13T00:40:41Z"
      lastUpdateTime: "2025-06-13T00:40:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "2"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent","namespace":"kube-system"},"spec":{"paused":false,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent"}},"strategy":{"rollingUpdate":{"maxSurge":0,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"annotations":{"checksum/client-cert":"f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919"},"labels":{"app":"konnectivity-agent","component":"tunnel","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"app","operator":"In","values":["konnectivity-agent"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"automountServiceAccountToken":false,"containers":[{"args":["--proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io","--proxy-server-port=443","--health-server-port=8082","--keepalive-time=30s","--agent-key=/certs/client.key","--agent-cert=/certs/client.crt","--ca-cert=/certs/ca.crt","--agent-identifiers=default-route=true","--alpn-proto=konnectivity","-v=2"],"command":["/proxy-agent"],"image":"mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"},"initialDelaySeconds":30,"periodSeconds":60,"timeoutSeconds":60},"name":"konnectivity-agent","readinessProbe":{"httpGet":{"path":"/ready","port":8082,"scheme":"HTTP"}},"resources":{"limits":{"cpu":"1000m","memory":"1Gi"},"requests":{"cpu":"20m","memory":"20Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}},"volumeMounts":[{"mountPath":"/certs","name":"certs"}]}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"name":"certs","secret":{"secretName":"konnectivity-certs"}}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 4
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent
    namespace: kube-system
    resourceVersion: "70015785"
    uid: e37df62a-858a-4099-8de2-1cb94f6d9388
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent
    strategy:
      rollingUpdate:
        maxSurge: 0
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        annotations:
          checksum/client-cert: f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919
          checksum/service-account-key: 27e7f3f8b8874d3095dd8b727f616c18d9adcad437dedc2af9a6f6de8f6e17f8
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-03-11T19:24:07Z"
      lastUpdateTime: "2025-03-11T19:30:53Z"
      message: ReplicaSet "konnectivity-agent-6dfd6cc99b" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-04-17T17:19:19Z"
      lastUpdateTime: "2025-04-17T17:19:19Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 4
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "1"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"konnectivity-agent-autoscaler","namespace":"kube-system"},"spec":{"paused":false,"replicas":1,"revisionHistoryLimit":2,"selector":{"matchLabels":{"app":"konnectivity-agent-autoscaler"}},"template":{"metadata":{"annotations":{"cluster-autoscaler.kubernetes.io/safe-to-evict":"true","seccomp.security.alpha.kubernetes.io/pod":"runtime/default"},"labels":{"app":"konnectivity-agent-autoscaler","kubernetes.azure.com/managedby":"aks"}},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}}},"containers":[{"command":["/cluster-proportional-autoscaler","--namespace=kube-system","--configmap=konnectivity-agent-autoscaler","--target=deployment/konnectivity-agent","--logtostderr=true","--v=2"],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5","imagePullPolicy":"IfNotPresent","livenessProbe":{"httpGet":{"path":"/last-poll","port":8080},"initialDelaySeconds":10,"periodSeconds":10},"name":"autoscaler","resources":{"limits":{"cpu":"350m","memory":"512M"},"requests":{"cpu":"20m","memory":"10Mi"}},"securityContext":{"capabilities":{"drop":["ALL"]}}}],"dnsPolicy":"Default","priorityClassName":"system-node-critical","serviceAccountName":"konnectivity-agent-autoscaler","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}]}}}}
    creationTimestamp: "2025-04-07T23:18:15Z"
    generation: 1
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: konnectivity-agent-autoscaler
    namespace: kube-system
    resourceVersion: "70015656"
    uid: 09d502b2-22c6-4e7f-9e46-2194a7f4775c
  spec:
    progressDeadlineSeconds: 600
    replicas: 1
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    conditions:
    - lastTransitionTime: "2025-04-07T23:18:15Z"
      lastUpdateTime: "2025-04-07T23:18:16Z"
      message: ReplicaSet "konnectivity-agent-autoscaler-cdfc7c46" has successfully
        progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    - lastTransitionTime: "2025-06-13T00:40:41Z"
      lastUpdateTime: "2025-06-13T00:40:41Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
    updatedReplicas: 1
- apiVersion: apps/v1
  kind: Deployment
  metadata:
    annotations:
      deployment.kubernetes.io/revision: "12"
      kubectl.kubernetes.io/last-applied-configuration: |
        {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{},"labels":{"addonmanager.kubernetes.io/mode":"Reconcile","k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks","kubernetes.io/cluster-service":"true"},"name":"metrics-server","namespace":"kube-system"},"spec":{"paused":false,"replicas":2,"revisionHistoryLimit":2,"selector":{"matchLabels":{"k8s-app":"metrics-server"}},"strategy":{"rollingUpdate":{"maxSurge":1,"maxUnavailable":1},"type":"RollingUpdate"},"template":{"metadata":{"labels":{"k8s-app":"metrics-server","kubernetes.azure.com/managedby":"aks"},"name":"metrics-server"},"spec":{"affinity":{"nodeAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"preference":{"matchExpressions":[{"key":"kubernetes.azure.com/mode","operator":"In","values":["system"]}]},"weight":100}],"requiredDuringSchedulingIgnoredDuringExecution":{"nodeSelectorTerms":[{"matchExpressions":[{"key":"kubernetes.azure.com/cluster","operator":"Exists"},{"key":"type","operator":"NotIn","values":["virtual-kubelet"]},{"key":"kubernetes.io/os","operator":"In","values":["linux"]}]}]}},"podAntiAffinity":{"preferredDuringSchedulingIgnoredDuringExecution":[{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"topology.kubernetes.io/zone"},"weight":10},{"podAffinityTerm":{"labelSelector":{"matchExpressions":[{"key":"k8s-app","operator":"In","values":["metrics-server"]}]},"topologyKey":"kubernetes.io/hostname"},"weight":5}]}},"containers":[{"command":["/pod_nanny","--config-dir=/etc/config","--cpu=150m","--extra-cpu=0.5m","--memory=100Mi","--extra-memory=4Mi","--poll-period=180000","--threshold=5","--deployment=metrics-server","--container=metrics-server"],"env":[{"name":"MY_POD_NAME","valueFrom":{"fieldRef":{"fieldPath":"metadata.name"}}},{"name":"MY_POD_NAMESPACE","valueFrom":{"fieldRef":{"fieldPath":"metadata.namespace"}}}],"image":"mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2","imagePullPolicy":"IfNotPresent","name":"metrics-server-vpa","resources":{"limits":{"cpu":"100m","memory":"300Mi"},"requests":{"cpu":"5m","memory":"30Mi"}},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/etc/config","name":"metrics-server-config-volume"}]},{"command":["/metrics-server","--kubelet-insecure-tls","--kubelet-preferred-address-types=InternalIP","--tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384","--cert-dir=/tmp","--secure-port=4443"],"image":"mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6","imagePullPolicy":"IfNotPresent","livenessProbe":{"failureThreshold":3,"httpGet":{"path":"/livez","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":20,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"name":"metrics-server","ports":[{"containerPort":4443,"name":"ms-https","protocol":"TCP"}],"readinessProbe":{"failureThreshold":3,"httpGet":{"path":"/readyz","port":"ms-https","scheme":"HTTPS"},"initialDelaySeconds":60,"periodSeconds":10,"successThreshold":1,"timeoutSeconds":10},"securityContext":{"allowPrivilegeEscalation":false,"capabilities":{"drop":["ALL"]},"readOnlyRootFilesystem":true,"runAsNonRoot":true,"runAsUser":65532},"volumeMounts":[{"mountPath":"/tmp","name":"tmp-dir"}]}],"priorityClassName":"system-node-critical","securityContext":{"seccompProfile":{"type":"RuntimeDefault"}},"serviceAccountName":"metrics-server","tolerations":[{"key":"CriticalAddonsOnly","operator":"Exists"},{"effect":"NoExecute","key":"node.kubernetes.io/unreachable","operator":"Exists","tolerationSeconds":30},{"effect":"NoExecute","key":"node.kubernetes.io/not-ready","operator":"Exists","tolerationSeconds":30}],"volumes":[{"emptyDir":{},"name":"tmp-dir"},{"configMap":{"name":"metrics-server-config","optional":true},"name":"metrics-server-config-volume"}]}}}}
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 12
    labels:
      addonmanager.kubernetes.io/mode: Reconcile
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
    name: metrics-server
    namespace: kube-system
    resourceVersion: "81541094"
    uid: 6e74f877-c6d8-4448-8c5e-0788511d26af
  spec:
    progressDeadlineSeconds: 600
    replicas: 2
    revisionHistoryLimit: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
    strategy:
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 1
      type: RollingUpdate
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 155m
              memory: 136Mi
            requests:
              cpu: 155m
              memory: 136Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    conditions:
    - lastTransitionTime: "2025-04-17T17:20:37Z"
      lastUpdateTime: "2025-04-17T17:20:37Z"
      message: Deployment has minimum availability.
      reason: MinimumReplicasAvailable
      status: "True"
      type: Available
    - lastTransitionTime: "2025-03-11T19:24:07Z"
      lastUpdateTime: "2025-06-25T23:17:35Z"
      message: ReplicaSet "metrics-server-54b79754f7" has successfully progressed.
      reason: NewReplicaSetAvailable
      status: "True"
      type: Progressing
    observedGeneration: 12
    readyReplicas: 2
    replicas: 2
    updatedReplicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-05-28T23:17:00Z"
    generation: 2
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 56568bbfc8
      rsName: ama-logs-rs
    name: ama-logs-rs-56568bbfc8
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-logs-rs
      uid: 54c22c9b-8902-44cf-a089-e9fabeb6a081
    resourceVersion: "82396640"
    uid: 66de99d6-a7f5-4561-b924-3ecc6ca7aaa5
  spec:
    replicas: 0
    selector:
      matchLabels:
        pod-template-hash: 56568bbfc8
        rsName: ama-logs-rs
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: azure-mdsd-1.35.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 56568bbfc8
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-04-07T23:17:52Z"
    generation: 2
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 68f5877794
      rsName: ama-logs-rs
    name: ama-logs-rs-68f5877794
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-logs-rs
      uid: 54c22c9b-8902-44cf-a089-e9fabeb6a081
    resourceVersion: "57095838"
    uid: d3c1dec8-9ab4-4da9-8fa1-8bb6109ad17d
  spec:
    replicas: 0
    selector:
      matchLabels:
        pod-template-hash: 68f5877794
        rsName: ama-logs-rs
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: azure-mdsd-1.31.4
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 68f5877794
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.26
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
      meta.helm.sh/release-name: aks-managed-azure-monitor-logs
      meta.helm.sh/release-namespace: kube-system
    creationTimestamp: "2025-06-26T23:06:07Z"
    generation: 1
    labels:
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 765b4599fb
      rsName: ama-logs-rs
    name: ama-logs-rs-765b4599fb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: ama-logs-rs
      uid: 54c22c9b-8902-44cf-a089-e9fabeb6a081
    resourceVersion: "87319755"
    uid: 6f4047fd-567a-4423-a078-0a2f0d87c6c9
  spec:
    replicas: 1
    selector:
      matchLabels:
        pod-template-hash: 765b4599fb
        rsName: ama-logs-rs
    template:
      metadata:
        annotations:
          WSID: MjRmOWJkMzctNWMyNi00MzYyLThkNTktOWNiY2ExYmYwNzE4
          agentVersion: azure-mdsd-1.35.1
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          dockerProviderVersion: 18.0.1-0
          kubernetes.azure.com/no-http-proxy-vars: "true"
          schema-versions: v1
        creationTimestamp: null
        labels:
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 765b4599fb
          rsName: ama-logs-rs
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            - preference:
                matchExpressions:
                - key: storageprofile
                  operator: NotIn
                  values:
                  - managed
              weight: 1
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
        containers:
        - env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: status.hostIP
          - name: AKS_CLUSTER_NAME
            value: d-210-akscl-sviya-k8-p-to-01
          - name: AKS_RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: AKS_NODE_RESOURCE_GROUP
            value: MC_d-210-rg-sviya-cl-p-to-01_d-210-akscl-sviya-k8-p-to-01_canadacentral
          - name: AKS_REGION
            value: canadacentral
          - name: CONTROLLER_TYPE
            value: ReplicaSet
          - name: USER_ASSIGNED_IDENTITY_CLIENT_ID
            value: bb4b7405-bb48-4507-a6c7-09a48a018501
          - name: NUM_OF_FLUENTD_WORKERS
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.cpu
          - name: CONTAINER_MEMORY_LIMIT_IN_BYTES
            valueFrom:
              resourceFieldRef:
                containerName: ama-logs
                divisor: "0"
                resource: limits.memory
          - name: HOSTNAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          - name: SIDECAR_SCRAPING_ENABLED
            value: "true"
          - name: USING_AAD_MSI_AUTH
            value: "false"
          - name: APPMONITORING_AUTOINSTRUMENTATION_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_ENABLED
            value: "false"
          - name: APPMONITORING_OPENTELEMETRYLOGS_PORT
            value: "28331"
          - name: PROMETHEUS_METRICS_SCRAPING_DISABLED
            value: "false"
          - name: AZMON_TELEGRAF_LIVENESSPROBE_ENABLED
            value: "false"
          - name: AZMON_WINDOWS_FLUENT_BIT_ENABLED
            value: "false"
          - name: CLUSTER_CLOUD_ENVIRONMENT
            value: azurepubliccloud
          image: mcr.microsoft.com/azuremonitor/containerinsights/ciprod:3.1.27
          imagePullPolicy: IfNotPresent
          livenessProbe:
            exec:
              command:
              - /bin/bash
              - -c
              - /opt/livenessprobe.sh
            failureThreshold: 3
            initialDelaySeconds: 60
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 15
          name: ama-logs
          ports:
          - containerPort: 25225
            protocol: TCP
          - containerPort: 25224
            protocol: UDP
          - containerPort: 25227
            name: in-rs-tcp
            protocol: TCP
          resources:
            limits:
              cpu: "1"
              memory: 1536Mi
            requests:
              cpu: 150m
              memory: 250Mi
          securityContext:
            capabilities:
              add:
              - DAC_OVERRIDE
              drop:
              - ALL
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /var/log
            name: host-log
          - mountPath: /etc/kubernetes/host
            name: azure-json-path
          - mountPath: /etc/ama-logs-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/omsagent-secret
            name: ama-logs-secret
            readOnly: true
          - mountPath: /etc/config
            name: ama-logs-rs-config
          - mountPath: /etc/config/settings
            name: settings-vol-config
            readOnly: true
          - mountPath: /etc/config/settings/adx
            name: ama-logs-adx-secret
            readOnly: true
          - mountPath: /etc/config/osm-settings
            name: osm-settings-vol-config
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: ama-logs
        serviceAccountName: ama-logs
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/hostname
            type: ""
          name: container-hostname
        - hostPath:
            path: /var/log
            type: ""
          name: host-log
        - hostPath:
            path: /etc/kubernetes
            type: ""
          name: azure-json-path
        - name: ama-logs-secret
          secret:
            defaultMode: 420
            secretName: ama-logs-secret
        - configMap:
            defaultMode: 420
            name: ama-logs-rs-config
          name: ama-logs-rs-config
        - configMap:
            defaultMode: 420
            name: container-azm-ms-agentconfig
            optional: true
          name: settings-vol-config
        - name: ama-logs-adx-secret
          secret:
            defaultMode: 420
            optional: true
            secretName: ama-logs-adx-secret
        - configMap:
            defaultMode: 420
            name: container-azm-ms-osmconfig
            optional: true
          name: osm-settings-vol-config
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "11"
    creationTimestamp: "2025-06-25T23:16:34Z"
    generation: 1
    labels:
      app: azure-policy
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5bdd784c47
    name: azure-policy-5bdd784c47
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy
      uid: 4298cff0-195f-42e0-99d2-3f9c3de25e05
    resourceVersion: "81540462"
    uid: f5ecb8bf-2fc7-4f8f-8e22-91d03b028f2d
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: azure-policy
        pod-template-hash: 5bdd784c47
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5bdd784c47
        name: azure-policy
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: K8S_POLICY_PREFIX
            value: azurepolicy
          - name: RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: RESOURCE_TYPE
            value: Microsoft.ContainerService/managedClusters
          - name: DATAPLANE_ENDPOINT
            value: https://data.policy.core.windows.net
          - name: ACS_CREDENTIAL_LOCATION
            value: /etc/acs/azure.json
          - name: REFRESH_INTERVAL
            value: 15m
          - name: AUDIT_INTERVAL
            value: 15m
          - name: TELEMETRY_HEARTBEAT_INTERVAL
            value: 15m
          - name: MUTATION_ENABLED
            value: "true"
          - name: EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT
            value: "false"
          - name: USER_ASSIGNED_IDENTITY
            value: f1a021b2-9902-4560-820a-f4139f4ffe90
          - name: CURRENT_IMAGE
            value: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
          - name: FULL_SCAN_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: WEBHOOK_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: GATEKEEPER_NAMESPACE
            value: gatekeeper-system
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: DATA_BOUNDARY
            value: Global
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.12.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/acs/azure.json
            name: acs-credential
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ca-certs
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted
            name: etc-pki-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy
        serviceAccountName: azure-policy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/azure.json
            type: File
          name: acs-credential
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ca-certs
        - hostPath:
            path: /etc/pki/ca-trust/extracted
            type: DirectoryOrCreate
          name: etc-pki-ca-certs
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "10"
    creationTimestamp: "2025-05-30T23:15:29Z"
    generation: 2
    labels:
      app: azure-policy
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 688dcc4fc9
    name: azure-policy-688dcc4fc9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy
      uid: 4298cff0-195f-42e0-99d2-3f9c3de25e05
    resourceVersion: "81540469"
    uid: 3b35c29f-8d08-464e-9ad6-f56592e30fb6
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: azure-policy
        pod-template-hash: 688dcc4fc9
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 688dcc4fc9
        name: azure-policy
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: K8S_POLICY_PREFIX
            value: azurepolicy
          - name: RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: RESOURCE_TYPE
            value: Microsoft.ContainerService/managedClusters
          - name: DATAPLANE_ENDPOINT
            value: https://data.policy.core.windows.net
          - name: ACS_CREDENTIAL_LOCATION
            value: /etc/acs/azure.json
          - name: REFRESH_INTERVAL
            value: 15m
          - name: AUDIT_INTERVAL
            value: 15m
          - name: TELEMETRY_HEARTBEAT_INTERVAL
            value: 15m
          - name: MUTATION_ENABLED
            value: "true"
          - name: EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT
            value: "false"
          - name: USER_ASSIGNED_IDENTITY
            value: f1a021b2-9902-4560-820a-f4139f4ffe90
          - name: CURRENT_IMAGE
            value: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.11.1
          - name: FULL_SCAN_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: WEBHOOK_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: GATEKEEPER_NAMESPACE
            value: gatekeeper-system
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: DATA_BOUNDARY
            value: Global
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/acs/azure.json
            name: acs-credential
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ca-certs
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted
            name: etc-pki-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy
        serviceAccountName: azure-policy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/azure.json
            type: File
          name: acs-credential
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ca-certs
        - hostPath:
            path: /etc/pki/ca-trust/extracted
            type: DirectoryOrCreate
          name: etc-pki-ca-certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "9"
    creationTimestamp: "2025-04-15T20:28:08Z"
    generation: 2
    labels:
      app: azure-policy
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6f4987868b
    name: azure-policy-6f4987868b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy
      uid: 4298cff0-195f-42e0-99d2-3f9c3de25e05
    resourceVersion: "58806681"
    uid: 282cd246-2b56-4796-8738-b19d3b1ba248
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: azure-policy
        pod-template-hash: 6f4987868b
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6f4987868b
        name: azure-policy
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - env:
          - name: K8S_POLICY_PREFIX
            value: azurepolicy
          - name: RESOURCE_ID
            value: /subscriptions/2b2b83ae-98b3-4993-aef8-a0f9ee22d767/resourceGroups/d-210-rg-sviya-cl-p-to-01/providers/Microsoft.ContainerService/managedClusters/d-210-akscl-sviya-k8-p-to-01
          - name: RESOURCE_TYPE
            value: Microsoft.ContainerService/managedClusters
          - name: DATAPLANE_ENDPOINT
            value: https://data.policy.core.windows.net
          - name: ACS_CREDENTIAL_LOCATION
            value: /etc/acs/azure.json
          - name: REFRESH_INTERVAL
            value: 15m
          - name: AUDIT_INTERVAL
            value: 15m
          - name: TELEMETRY_HEARTBEAT_INTERVAL
            value: 15m
          - name: MUTATION_ENABLED
            value: "true"
          - name: EVALUATE_EXPANDED_RESOURCES_BY_DEFAULT
            value: "false"
          - name: USER_ASSIGNED_IDENTITY
            value: f1a021b2-9902-4560-820a-f4139f4ffe90
          - name: CURRENT_IMAGE
            value: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.10.1
          - name: FULL_SCAN_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: WEBHOOK_EXCLUSION_LIST
            value: kube-system,gatekeeper-system
          - name: GATEKEEPER_NAMESPACE
            value: gatekeeper-system
          - name: POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-addon-prod:1.10.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsUser: 0
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/acs/azure.json
            name: acs-credential
            readOnly: true
          - mountPath: /etc/ssl/certs
            name: ca-certs
            readOnly: true
          - mountPath: /etc/pki/ca-trust/extracted
            name: etc-pki-ca-certs
            readOnly: true
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy
        serviceAccountName: azure-policy
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        volumes:
        - hostPath:
            path: /etc/kubernetes/azure.json
            type: File
          name: acs-credential
        - hostPath:
            path: /etc/ssl/certs
            type: Directory
          name: ca-certs
        - hostPath:
            path: /etc/pki/ca-trust/extracted
            type: DirectoryOrCreate
          name: etc-pki-ca-certs
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-03-25T23:23:05Z"
    generation: 2
    labels:
      app: azure-policy-webhook
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 54547fb956
    name: azure-policy-webhook-54547fb956
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy-webhook
      uid: 58a45e5b-03b9-4c0a-af04-73be68d9c900
    resourceVersion: "58806704"
    uid: a2b5d8f6-fb66-442c-926f-3bc45ffe0a39
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: azure-policy-webhook
        pod-template-hash: 54547fb956
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          checksum/ca-cert: a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5
          checksum/tls-cert: a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy-webhook
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 54547fb956
        name: azure-policy-webhook
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --port=9449
          - --generate-certs=false
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.10.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy-webhook
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy-webhook-account
        serviceAccountName: azure-policy-webhook-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "3"
    creationTimestamp: "2025-05-30T23:15:30Z"
    generation: 2
    labels:
      app: azure-policy-webhook
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6fb4498d
    name: azure-policy-webhook-6fb4498d
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy-webhook
      uid: 58a45e5b-03b9-4c0a-af04-73be68d9c900
    resourceVersion: "81540292"
    uid: 00b03321-41d3-46ad-a46b-7a0c651914a0
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: azure-policy-webhook
        pod-template-hash: 6fb4498d
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          checksum/ca-cert: a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5
          checksum/tls-cert: a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy-webhook
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6fb4498d
        name: azure-policy-webhook
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --port=9449
          - --generate-certs=false
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.11.1
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy-webhook
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy-webhook-account
        serviceAccountName: azure-policy-webhook-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    observedGeneration: 2
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "4"
    creationTimestamp: "2025-06-25T23:16:35Z"
    generation: 1
    labels:
      app: azure-policy-webhook
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 74dc77d8c5
    name: azure-policy-webhook-74dc77d8c5
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: azure-policy-webhook
      uid: 58a45e5b-03b9-4c0a-af04-73be68d9c900
    resourceVersion: "81540285"
    uid: 8e6a41c0-eca9-4097-846d-bb5591b03b57
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: azure-policy-webhook
        pod-template-hash: 74dc77d8c5
    template:
      metadata:
        annotations:
          aks.component/sig: azure-policy
          checksum/ca-cert: a31c1b1543f67c466bfc32afcbb338efb5bef8b375cb656d0edbb13d843a93f5
          checksum/tls-cert: a9dc16a7a3875d174c1af4f923f261cafc124357f2322493a59ee0d14fcd10db
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
        creationTimestamp: null
        labels:
          app: azure-policy-webhook
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 74dc77d8c5
        name: azure-policy-webhook
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - azure-policy-webhook
                topologyKey: kubernetes.io/hostname
              weight: 100
        containers:
        - args:
          - --port=9449
          - --generate-certs=false
          env:
          - name: POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: WEBHOOK_SYNC_POLICIES_ALLOWED_USERNAMES
            value: aksService,aksDeploymentSafeguards
          image: mcr.microsoft.com/azure-policy/policy-kubernetes-webhook:1.12.2
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /healthz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: azure-policy-webhook
          ports:
          - containerPort: 9090
            name: healthz
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: 9090
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: 100m
              memory: 200Mi
            requests:
              cpu: 30m
              memory: 50Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsGroup: 999
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: azure-policy-webhook-account
        serviceAccountName: azure-policy-webhook-account
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 50
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: 659fcb469c
      version: v20
    name: coredns-659fcb469c
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: e5de82de-21a3-490c-9f57-2166e12d13c7
    resourceVersion: "81539887"
    uid: 17a4faa1-166b-4163-af32-69df05f3f1d6
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: 659fcb469c
        version: v20
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          pod-template-hash: 659fcb469c
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    observedGeneration: 50
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 1
    labels:
      k8s-app: coredns-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5955d6bbdb
    name: coredns-autoscaler-5955d6bbdb
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns-autoscaler
      uid: 9865b0a4-7c40-4726-b3b6-a27e7f648ddb
    resourceVersion: "70015640"
    uid: aeeb0244-a3f7-4c19-bf41-e5a02717993d
  spec:
    replicas: 1
    selector:
      matchLabels:
        k8s-app: coredns-autoscaler
        pod-template-hash: 5955d6bbdb
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          k8s-app: coredns-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5955d6bbdb
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=coredns-autoscaler
          - --target=deployment/coredns
          - --default-params={"ladder":{"coresToReplicas":[[1,2],[512,3],[1024,4],[2048,5]],"nodesToReplicas":[[1,2],[8,3],[16,4],[32,5]]}}
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 200m
              memory: 1G
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns-autoscaler
        serviceAccountName: coredns-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "3"
      deployment.kubernetes.io/max-replicas: "4"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-06-25T23:16:21Z"
    generation: 3
    labels:
      k8s-app: kube-dns
      kubernetes.azure.com/managedby: aks
      kubernetes.io/cluster-service: "true"
      pod-template-hash: dbb879dfd
      version: v20
    name: coredns-dbb879dfd
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: coredns
      uid: e5de82de-21a3-490c-9f57-2166e12d13c7
    resourceVersion: "81540181"
    uid: 89cd1c41-06f3-4a60-9a34-6c1c572fa3b8
  spec:
    replicas: 3
    selector:
      matchLabels:
        k8s-app: kube-dns
        pod-template-hash: dbb879dfd
        version: v20
    template:
      metadata:
        annotations:
          prometheus.io/port: "9153"
        creationTimestamp: null
        labels:
          k8s-app: kube-dns
          kubernetes.azure.com/managedby: aks
          kubernetes.io/cluster-service: "true"
          pod-template-hash: dbb879dfd
          version: v20
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - kube-dns
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - args:
          - -conf
          - /etc/coredns/Corefile
          env:
          - name: GOMAXPROCS
            valueFrom:
              resourceFieldRef:
                divisor: "0"
                resource: limits.cpu
          image: mcr.microsoft.com/oss/v2/kubernetes/coredns:v1.9.4-6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 5
            httpGet:
              path: /health
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          name: coredns
          ports:
          - containerPort: 53
            name: dns
            protocol: UDP
          - containerPort: 53
            name: dns-tcp
            protocol: TCP
          - containerPort: 9153
            name: metrics
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8181
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "3"
              memory: 500Mi
            requests:
              cpu: 100m
              memory: 70Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
              - NET_BIND_SERVICE
              drop:
              - ALL
            procMount: Default
            readOnlyRootFilesystem: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/coredns
            name: config-volume
            readOnly: true
          - mountPath: /etc/coredns/custom
            name: custom-config-volume
            readOnly: true
          - mountPath: /tmp
            name: tmp
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: coredns
        serviceAccountName: coredns
        terminationGracePeriodSeconds: 30
        tolerations:
        - effect: NoSchedule
          key: node-role.kubernetes.io/master
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - configMap:
            defaultMode: 420
            items:
            - key: Corefile
              path: Corefile
            name: coredns
          name: config-volume
        - configMap:
            defaultMode: 420
            name: coredns-custom
            optional: true
          name: custom-config-volume
        - emptyDir: {}
          name: tmp
  status:
    availableReplicas: 3
    fullyLabeledReplicas: 3
    observedGeneration: 3
    readyReplicas: 3
    replicas: 3
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "2"
    creationTimestamp: "2025-03-11T19:30:28Z"
    generation: 5
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 6dfd6cc99b
    name: konnectivity-agent-6dfd6cc99b
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: e37df62a-858a-4099-8de2-1cb94f6d9388
    resourceVersion: "70015783"
    uid: d0946177-2045-49e8-9a50-bc41f7a52cbd
  spec:
    replicas: 2
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 6dfd6cc99b
    template:
      metadata:
        annotations:
          checksum/client-cert: f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919
          checksum/service-account-key: 27e7f3f8b8874d3095dd8b727f616c18d9adcad437dedc2af9a6f6de8f6e17f8
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 6dfd6cc99b
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 5
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-03-11T19:24:07Z"
    generation: 3
    labels:
      app: konnectivity-agent
      component: tunnel
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7d8b7765d9
    name: konnectivity-agent-7d8b7765d9
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent
      uid: e37df62a-858a-4099-8de2-1cb94f6d9388
    resourceVersion: "4689"
    uid: 80981130-48af-4a33-8992-945e6e5b6fed
  spec:
    replicas: 0
    selector:
      matchLabels:
        app: konnectivity-agent
        pod-template-hash: 7d8b7765d9
    template:
      metadata:
        annotations:
          checksum/client-cert: f3167c4482eda08c546eee63968964b798e62b52722b1d1904a23cb2f3c6a919
        creationTimestamp: null
        labels:
          app: konnectivity-agent
          component: tunnel
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7d8b7765d9
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: app
                    operator: In
                    values:
                    - konnectivity-agent
                topologyKey: kubernetes.io/hostname
              weight: 5
        automountServiceAccountToken: false
        containers:
        - args:
          - --proxy-server-host=d-210-akscl-sviya-k8-p-to-01.privatelink.canadacentral.azmk8s.io
          - --proxy-server-port=443
          - --health-server-port=8082
          - --keepalive-time=30s
          - --agent-key=/certs/client.key
          - --agent-cert=/certs/client.crt
          - --ca-cert=/certs/ca.crt
          - --agent-identifiers=default-route=true
          - --alpn-proto=konnectivity
          - -v=2
          command:
          - /proxy-agent
          image: mcr.microsoft.com/oss/kubernetes/apiserver-network-proxy/agent:v0.30.3-hotfix.20240819
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            initialDelaySeconds: 30
            periodSeconds: 60
            successThreshold: 1
            timeoutSeconds: 60
          name: konnectivity-agent
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /ready
              port: 8082
              scheme: HTTP
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          resources:
            limits:
              cpu: "1"
              memory: 1Gi
            requests:
              cpu: 20m
              memory: 20Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /certs
            name: certs
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent
        serviceAccountName: konnectivity-agent
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - name: certs
          secret:
            defaultMode: 420
            secretName: konnectivity-certs
  status:
    observedGeneration: 3
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "1"
      deployment.kubernetes.io/max-replicas: "2"
      deployment.kubernetes.io/revision: "1"
    creationTimestamp: "2025-04-07T23:18:15Z"
    generation: 1
    labels:
      app: konnectivity-agent-autoscaler
      kubernetes.azure.com/managedby: aks
      pod-template-hash: cdfc7c46
    name: konnectivity-agent-autoscaler-cdfc7c46
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: konnectivity-agent-autoscaler
      uid: 09d502b2-22c6-4e7f-9e46-2194a7f4775c
    resourceVersion: "70015655"
    uid: e7993526-4680-4140-9324-fca39cc9036b
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: konnectivity-agent-autoscaler
        pod-template-hash: cdfc7c46
    template:
      metadata:
        annotations:
          cluster-autoscaler.kubernetes.io/safe-to-evict: "true"
          seccomp.security.alpha.kubernetes.io/pod: runtime/default
        creationTimestamp: null
        labels:
          app: konnectivity-agent-autoscaler
          kubernetes.azure.com/managedby: aks
          pod-template-hash: cdfc7c46
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
        containers:
        - command:
          - /cluster-proportional-autoscaler
          - --namespace=kube-system
          - --configmap=konnectivity-agent-autoscaler
          - --target=deployment/konnectivity-agent
          - --logtostderr=true
          - --v=2
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/cluster-proportional-autoscaler:v1.8.11-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /last-poll
              port: 8080
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 1
          name: autoscaler
          resources:
            limits:
              cpu: 350m
              memory: 512M
            requests:
              cpu: 20m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
              - ALL
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: Default
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        serviceAccount: konnectivity-agent-autoscaler
        serviceAccountName: konnectivity-agent-autoscaler
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
  status:
    availableReplicas: 1
    fullyLabeledReplicas: 1
    observedGeneration: 1
    readyReplicas: 1
    replicas: 1
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "12"
    creationTimestamp: "2025-06-25T23:16:24Z"
    generation: 2
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 54b79754f7
    name: metrics-server-54b79754f7
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 6e74f877-c6d8-4448-8c5e-0788511d26af
    resourceVersion: "81541093"
    uid: 094a1725-998d-426c-807b-fa84cca09b90
  spec:
    replicas: 2
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 54b79754f7
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 54b79754f7
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-6
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 155m
              memory: 136Mi
            requests:
              cpu: 155m
              memory: 136Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    availableReplicas: 2
    fullyLabeledReplicas: 2
    observedGeneration: 2
    readyReplicas: 2
    replicas: 2
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "10"
      deployment.kubernetes.io/revision-history: 5,7
    creationTimestamp: "2025-04-03T15:39:17Z"
    generation: 12
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 5d546b4b78
    name: metrics-server-5d546b4b78
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 6e74f877-c6d8-4448-8c5e-0788511d26af
    resourceVersion: "52033707"
    uid: 38abbf9a-e791-40ba-8541-acaefe1ad7c2
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 5d546b4b78
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 5d546b4b78
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 154m
              memory: 128Mi
            requests:
              cpu: 154m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    observedGeneration: 12
    replicas: 0
- apiVersion: apps/v1
  kind: ReplicaSet
  metadata:
    annotations:
      deployment.kubernetes.io/desired-replicas: "2"
      deployment.kubernetes.io/max-replicas: "3"
      deployment.kubernetes.io/revision: "11"
      deployment.kubernetes.io/revision-history: 4,6,9
    creationTimestamp: "2025-04-03T15:36:14Z"
    generation: 16
    labels:
      k8s-app: metrics-server
      kubernetes.azure.com/managedby: aks
      pod-template-hash: 7dc6959c58
    name: metrics-server-7dc6959c58
    namespace: kube-system
    ownerReferences:
    - apiVersion: apps/v1
      blockOwnerDeletion: true
      controller: true
      kind: Deployment
      name: metrics-server
      uid: 6e74f877-c6d8-4448-8c5e-0788511d26af
    resourceVersion: "81541086"
    uid: 7cb351d0-6baa-4845-a37b-14b5bc09a9dc
  spec:
    replicas: 0
    selector:
      matchLabels:
        k8s-app: metrics-server
        pod-template-hash: 7dc6959c58
    template:
      metadata:
        creationTimestamp: null
        labels:
          k8s-app: metrics-server
          kubernetes.azure.com/managedby: aks
          pod-template-hash: 7dc6959c58
        name: metrics-server
      spec:
        affinity:
          nodeAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - key: kubernetes.azure.com/mode
                  operator: In
                  values:
                  - system
              weight: 100
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - key: kubernetes.azure.com/cluster
                  operator: Exists
                - key: type
                  operator: NotIn
                  values:
                  - virtual-kubelet
                - key: kubernetes.io/os
                  operator: In
                  values:
                  - linux
          podAntiAffinity:
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: topology.kubernetes.io/zone
              weight: 10
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - key: k8s-app
                    operator: In
                    values:
                    - metrics-server
                topologyKey: kubernetes.io/hostname
              weight: 5
        containers:
        - command:
          - /pod_nanny
          - --config-dir=/etc/config
          - --cpu=150m
          - --extra-cpu=0.5m
          - --memory=100Mi
          - --extra-memory=4Mi
          - --poll-period=180000
          - --threshold=5
          - --deployment=metrics-server
          - --container=metrics-server
          env:
          - name: MY_POD_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.name
          - name: MY_POD_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          image: mcr.microsoft.com/oss/v2/kubernetes/autoscaler/addon-resizer:v1.8.23-2
          imagePullPolicy: IfNotPresent
          name: metrics-server-vpa
          resources:
            limits:
              cpu: 100m
              memory: 300Mi
            requests:
              cpu: 5m
              memory: 30Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /etc/config
            name: metrics-server-config-volume
        - command:
          - /metrics-server
          - --kubelet-insecure-tls
          - --kubelet-preferred-address-types=InternalIP
          - --tls-cipher-suites=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256,TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384,TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
          - --cert-dir=/tmp
          - --secure-port=4443
          image: mcr.microsoft.com/oss/v2/kubernetes/metrics-server:v0.6.3-5
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /livez
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 20
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          name: metrics-server
          ports:
          - containerPort: 4443
            name: ms-https
            protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /readyz
              port: ms-https
              scheme: HTTPS
            initialDelaySeconds: 60
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 10
          resources:
            limits:
              cpu: 155m
              memory: 136Mi
            requests:
              cpu: 155m
              memory: 136Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
              - ALL
            readOnlyRootFilesystem: true
            runAsNonRoot: true
            runAsUser: 65532
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
          - mountPath: /tmp
            name: tmp-dir
        dnsPolicy: ClusterFirst
        priorityClassName: system-node-critical
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext:
          seccompProfile:
            type: RuntimeDefault
        serviceAccount: metrics-server
        serviceAccountName: metrics-server
        terminationGracePeriodSeconds: 30
        tolerations:
        - key: CriticalAddonsOnly
          operator: Exists
        - effect: NoExecute
          key: node.kubernetes.io/unreachable
          operator: Exists
          tolerationSeconds: 30
        - effect: NoExecute
          key: node.kubernetes.io/not-ready
          operator: Exists
          tolerationSeconds: 30
        volumes:
        - emptyDir: {}
          name: tmp-dir
        - configMap:
            defaultMode: 420
            name: metrics-server-config
            optional: true
          name: metrics-server-config-volume
  status:
    observedGeneration: 16
    replicas: 0
kind: List
metadata:
  resourceVersion: ""
